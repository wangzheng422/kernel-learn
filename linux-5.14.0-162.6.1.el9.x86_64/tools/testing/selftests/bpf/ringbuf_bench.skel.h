/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __RINGBUF_BENCH_SKEL_H__
#define __RINGBUF_BENCH_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct ringbuf_bench {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *ringbuf;
		struct bpf_map *rodata;
		struct bpf_map *data;
		struct bpf_map *bss;
	} maps;
	struct {
		struct bpf_program *bench_ringbuf;
	} progs;
	struct {
		struct bpf_link *bench_ringbuf;
	} links;
	struct ringbuf_bench__rodata {
		int batch_cnt;
		char __pad0[4];
		long use_output;
		long wakeup_data_size;
	} *rodata;
	struct ringbuf_bench__data {
		long sample_val;
	} *data;
	struct ringbuf_bench__bss {
		long dropped;
	} *bss;
};

static void
ringbuf_bench__destroy(struct ringbuf_bench *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
ringbuf_bench__create_skeleton(struct ringbuf_bench *obj);

static inline struct ringbuf_bench *
ringbuf_bench__open_opts(const struct bpf_object_open_opts *opts)
{
	struct ringbuf_bench *obj;
	int err;

	obj = (struct ringbuf_bench *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = ringbuf_bench__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	ringbuf_bench__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct ringbuf_bench *
ringbuf_bench__open(void)
{
	return ringbuf_bench__open_opts(NULL);
}

static inline int
ringbuf_bench__load(struct ringbuf_bench *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct ringbuf_bench *
ringbuf_bench__open_and_load(void)
{
	struct ringbuf_bench *obj;
	int err;

	obj = ringbuf_bench__open();
	if (!obj)
		return NULL;
	err = ringbuf_bench__load(obj);
	if (err) {
		ringbuf_bench__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
ringbuf_bench__attach(struct ringbuf_bench *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
ringbuf_bench__detach(struct ringbuf_bench *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *ringbuf_bench__elf_bytes(size_t *sz);

static inline int
ringbuf_bench__create_skeleton(struct ringbuf_bench *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "ringbuf_bench";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 4;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "ringbuf";
	s->maps[0].map = &obj->maps.ringbuf;

	s->maps[1].name = "ringbuf_.rodata";
	s->maps[1].map = &obj->maps.rodata;
	s->maps[1].mmaped = (void **)&obj->rodata;

	s->maps[2].name = "ringbuf_.data";
	s->maps[2].map = &obj->maps.data;
	s->maps[2].mmaped = (void **)&obj->data;

	s->maps[3].name = "ringbuf_.bss";
	s->maps[3].map = &obj->maps.bss;
	s->maps[3].mmaped = (void **)&obj->bss;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "bench_ringbuf";
	s->progs[0].prog = &obj->progs.bench_ringbuf;
	s->progs[0].link = &obj->links.bench_ringbuf;

	s->data = (void *)ringbuf_bench__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *ringbuf_bench__elf_bytes(size_t *sz)
{
	*sz = 4496;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x90\x0e\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0c\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x66\x65\
\x6e\x74\x72\x79\x2f\x5f\x5f\x78\x36\x34\x5f\x73\x79\x73\x5f\x67\x65\x74\x70\
\x67\x69\x64\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\
\x64\x61\x74\x61\0\x2e\x62\x73\x73\0\x2e\x6d\x61\x70\x73\0\x72\x69\x6e\x67\x62\
\x75\x66\x5f\x62\x65\x6e\x63\x68\x2e\x63\0\x4c\x42\x42\x30\x5f\x34\0\x4c\x42\
\x42\x30\x5f\x31\x38\0\x4c\x42\x42\x30\x5f\x33\0\x4c\x42\x42\x30\x5f\x36\0\x4c\
\x42\x42\x30\x5f\x31\x31\0\x4c\x42\x42\x30\x5f\x31\x32\0\x4c\x42\x42\x30\x5f\
\x38\0\x4c\x42\x42\x30\x5f\x31\x37\0\x4c\x42\x42\x30\x5f\x31\x35\0\x62\x65\x6e\
\x63\x68\x5f\x72\x69\x6e\x67\x62\x75\x66\0\x75\x73\x65\x5f\x6f\x75\x74\x70\x75\
\x74\0\x62\x61\x74\x63\x68\x5f\x63\x6e\x74\0\x77\x61\x6b\x65\x75\x70\x5f\x64\
\x61\x74\x61\x5f\x73\x69\x7a\x65\0\x64\x72\x6f\x70\x70\x65\x64\0\x72\x69\x6e\
\x67\x62\x75\x66\0\x73\x61\x6d\x70\x6c\x65\x5f\x76\x61\x6c\0\x5f\x6c\x69\x63\
\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x66\x65\x6e\x74\x72\x79\x2f\x5f\x5f\x78\x36\
\x34\x5f\x73\x79\x73\x5f\x67\x65\x74\x70\x67\x69\x64\0\x2e\x42\x54\x46\0\x2e\
\x42\x54\x46\x2e\x65\x78\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x4b\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5b\0\0\0\0\0\x03\0\x80\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x62\0\0\0\0\0\x03\0\xe0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x6a\0\0\0\0\0\x03\0\xf0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x71\0\0\0\0\0\x03\0\
\xe8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\0\0\0\0\0\x03\0\xb8\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x80\0\0\0\0\0\x03\0\xc8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\0\0\0\0\0\
\x03\0\x48\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8f\0\0\0\0\0\x03\0\xc8\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x97\0\0\0\0\0\x03\0\x48\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x9f\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x98\x02\0\0\0\0\0\0\xad\0\0\0\x11\0\x05\
\0\x08\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xb8\0\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\
\x04\0\0\0\0\0\0\0\xc2\0\0\0\x11\0\x05\0\x10\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\xd3\0\0\0\x11\0\x07\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xdb\0\0\0\x11\0\x08\0\
\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xe3\0\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x08\0\
\0\0\0\0\0\0\xee\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x18\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x79\x12\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x61\x11\0\0\0\0\0\0\x15\x02\x09\0\0\0\0\0\xc6\x01\x34\0\x01\0\0\0\xb4\x06\
\0\0\0\0\0\0\x18\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x08\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x18\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\x2e\0\0\0\0\0\xc6\x01\x2b\0\
\x01\0\0\0\xb4\x07\0\0\0\0\0\0\x18\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x08\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\x06\0\0\0\0\0\xbf\x61\0\0\0\0\0\0\x85\0\0\0\x84\
\0\0\0\x04\x07\0\0\x01\0\0\0\x61\x91\0\0\0\0\0\0\xce\x17\x01\0\0\0\0\0\x05\0\
\x1f\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\x08\0\0\0\xb7\
\x03\0\0\0\0\0\0\x85\0\0\0\x83\0\0\0\xbf\x06\0\0\0\0\0\0\x55\x06\x05\0\0\0\0\0\
\xb7\x01\0\0\x01\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdb\x12\0\0\0\0\0\0\
\x05\0\xf0\xff\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x79\x11\0\0\0\0\0\0\
\x7b\x16\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x79\x81\0\0\0\0\0\0\x15\x01\xe7\xff\0\
\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x86\0\
\0\0\x79\x81\0\0\0\0\0\0\xb7\x02\0\0\x01\0\0\0\xcd\x10\xe0\xff\0\0\0\0\xb7\x02\
\0\0\x02\0\0\0\x05\0\xde\xff\0\0\0\0\x04\x06\0\0\x01\0\0\0\x61\x81\0\0\0\0\0\0\
\xce\x16\x02\0\0\0\0\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x79\x71\0\0\0\0\0\0\
\xb7\x04\0\0\0\0\0\0\x15\x01\x08\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x86\0\0\0\x79\x71\0\0\0\0\0\0\xb7\x04\0\0\x01\0\
\0\0\xcd\x10\x01\0\0\0\0\0\xb7\x04\0\0\x02\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x03\0\0\x08\0\0\0\x85\0\0\0\x82\
\0\0\0\x15\0\xe9\xff\0\0\0\0\xb7\x01\0\0\x01\0\0\0\xdb\x19\0\0\0\0\0\0\x05\0\
\xe6\xff\0\0\0\0\x47\x50\x4c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x2a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x0d\
\0\0\0\x18\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\x48\0\0\0\0\0\0\0\x01\0\0\0\x0f\0\
\0\0\x58\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\x68\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\
\0\x90\0\0\0\0\0\0\0\x01\0\0\0\x0e\0\0\0\xa0\0\0\0\0\0\0\0\x01\0\0\0\x0f\0\0\0\
\xe8\0\0\0\0\0\0\0\x01\0\0\0\x11\0\0\0\x28\x01\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\
\x48\x01\0\0\0\0\0\0\x01\0\0\0\x12\0\0\0\x80\x01\0\0\0\0\0\0\x01\0\0\0\x11\0\0\
\0\x08\x02\0\0\0\0\0\0\x01\0\0\0\x11\0\0\0\x48\x02\0\0\0\0\0\0\x01\0\0\0\x11\0\
\0\0\x58\x02\0\0\0\0\0\0\x01\0\0\0\x12\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\
\xf0\x01\0\0\xf0\x01\0\0\xf0\x02\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\
\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x1b\
\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\x04\x08\0\0\0\
\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\0\0\0\x0e\x05\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\x02\0\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\x26\0\0\0\x07\0\0\0\x2a\0\0\0\
\x01\0\0\x0c\x08\0\0\0\x38\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\
\x03\0\0\0\0\x0a\0\0\0\x04\0\0\0\x04\0\0\0\x3d\0\0\0\0\0\0\x0e\x0b\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\x0a\x0e\0\0\0\0\0\0\0\0\0\0\x09\x02\0\0\0\x46\0\0\0\0\0\0\
\x0e\x0d\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x0a\x11\0\0\0\0\0\0\0\0\0\0\x09\x12\0\0\
\0\x50\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\x01\x55\0\0\0\0\0\0\x0e\x10\0\0\0\x01\
\0\0\0\x60\0\0\0\0\0\0\x0e\x12\0\0\0\x01\0\0\0\x6b\0\0\0\0\0\0\x0e\x12\0\0\0\
\x01\0\0\0\x73\0\0\0\0\0\0\x0e\x10\0\0\0\x01\0\0\0\xb6\x02\0\0\x01\0\0\x0f\x04\
\0\0\0\x0c\0\0\0\0\0\0\0\x04\0\0\0\xbe\x02\0\0\x03\0\0\x0f\x18\0\0\0\x0f\0\0\0\
\0\0\0\0\x04\0\0\0\x13\0\0\0\x08\0\0\0\x08\0\0\0\x16\0\0\0\x10\0\0\0\x08\0\0\0\
\xc6\x02\0\0\x01\0\0\x0f\x08\0\0\0\x14\0\0\0\0\0\0\0\x08\0\0\0\xcc\x02\0\0\x01\
\0\0\x0f\x08\0\0\0\x15\0\0\0\0\0\0\0\x08\0\0\0\xd1\x02\0\0\x01\0\0\x0f\x08\0\0\
\0\x06\0\0\0\0\0\0\0\x08\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\
\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x72\x69\x6e\
\x67\x62\x75\x66\0\x63\x74\x78\0\x62\x65\x6e\x63\x68\x5f\x72\x69\x6e\x67\x62\
\x75\x66\0\x63\x68\x61\x72\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x62\x61\x74\x63\
\x68\x5f\x63\x6e\x74\0\x6c\x6f\x6e\x67\0\x75\x73\x65\x5f\x6f\x75\x74\x70\x75\
\x74\0\x73\x61\x6d\x70\x6c\x65\x5f\x76\x61\x6c\0\x64\x72\x6f\x70\x70\x65\x64\0\
\x77\x61\x6b\x65\x75\x70\x5f\x64\x61\x74\x61\x5f\x73\x69\x7a\x65\0\x2f\x72\x6f\
\x6f\x74\x2f\x72\x70\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\
\x65\x72\x6e\x65\x6c\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\
\x31\x2e\x65\x6c\x39\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\
\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\
\x34\x2f\x74\x6f\x6f\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\
\x66\x74\x65\x73\x74\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x72\x69\
\x6e\x67\x62\x75\x66\x5f\x62\x65\x6e\x63\x68\x2e\x63\0\x09\x69\x66\x20\x28\x21\
\x75\x73\x65\x5f\x6f\x75\x74\x70\x75\x74\x29\x20\x7b\0\x09\x09\x66\x6f\x72\x20\
\x28\x69\x20\x3d\x20\x30\x3b\x20\x69\x20\x3c\x20\x62\x61\x74\x63\x68\x5f\x63\
\x6e\x74\x3b\x20\x69\x2b\x2b\x29\x20\x7b\0\x09\x09\x09\x09\x62\x70\x66\x5f\x72\
\x69\x6e\x67\x62\x75\x66\x5f\x73\x75\x62\x6d\x69\x74\x28\x73\x61\x6d\x70\x6c\
\x65\x2c\x20\x66\x6c\x61\x67\x73\x29\x3b\0\x09\x09\x09\x73\x61\x6d\x70\x6c\x65\
\x20\x3d\x20\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\x65\x73\x65\
\x72\x76\x65\x28\x26\x72\x69\x6e\x67\x62\x75\x66\x2c\0\x09\x09\x09\x69\x66\x20\
\x28\x21\x73\x61\x6d\x70\x6c\x65\x29\x20\x7b\0\x09\x09\x09\x09\x5f\x5f\x73\x79\
\x6e\x63\x5f\x61\x64\x64\x5f\x61\x6e\x64\x5f\x66\x65\x74\x63\x68\x28\x26\x64\
\x72\x6f\x70\x70\x65\x64\x2c\x20\x31\x29\x3b\0\x09\x09\x09\x09\x2a\x73\x61\x6d\
\x70\x6c\x65\x20\x3d\x20\x73\x61\x6d\x70\x6c\x65\x5f\x76\x61\x6c\x3b\0\x09\x69\
\x66\x20\x28\x21\x77\x61\x6b\x65\x75\x70\x5f\x64\x61\x74\x61\x5f\x73\x69\x7a\
\x65\x29\0\x09\x73\x7a\x20\x3d\x20\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\
\x5f\x71\x75\x65\x72\x79\x28\x26\x72\x69\x6e\x67\x62\x75\x66\x2c\x20\x42\x50\
\x46\x5f\x52\x42\x5f\x41\x56\x41\x49\x4c\x5f\x44\x41\x54\x41\x29\x3b\0\x09\x72\
\x65\x74\x75\x72\x6e\x20\x73\x7a\x20\x3e\x3d\x20\x77\x61\x6b\x65\x75\x70\x5f\
\x64\x61\x74\x61\x5f\x73\x69\x7a\x65\x20\x3f\x20\x42\x50\x46\x5f\x52\x42\x5f\
\x46\x4f\x52\x43\x45\x5f\x57\x41\x4b\x45\x55\x50\x20\x3a\x20\x42\x50\x46\x5f\
\x52\x42\x5f\x4e\x4f\x5f\x57\x41\x4b\x45\x55\x50\x3b\0\x09\x72\x65\x74\x75\x72\
\x6e\x20\x30\x3b\0\x09\x09\x09\x69\x66\x20\x28\x62\x70\x66\x5f\x72\x69\x6e\x67\
\x62\x75\x66\x5f\x6f\x75\x74\x70\x75\x74\x28\x26\x72\x69\x6e\x67\x62\x75\x66\
\x2c\x20\x26\x73\x61\x6d\x70\x6c\x65\x5f\x76\x61\x6c\x2c\0\x6c\x69\x63\x65\x6e\
\x73\x65\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\x64\x61\x74\x61\0\x2e\x62\x73\x73\
\0\x2e\x6d\x61\x70\x73\0\x66\x65\x6e\x74\x72\x79\x2f\x5f\x5f\x78\x36\x34\x5f\
\x73\x79\x73\x5f\x67\x65\x74\x70\x67\x69\x64\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\
\x14\0\0\0\x14\0\0\0\xfc\x01\0\0\x10\x02\0\0\0\0\0\0\x08\0\0\0\xd7\x02\0\0\x01\
\0\0\0\0\0\0\0\x09\0\0\0\x10\0\0\0\xd7\x02\0\0\x1f\0\0\0\0\0\0\0\x84\0\0\0\x07\
\x01\0\0\x07\x9c\0\0\x18\0\0\0\x84\0\0\0\0\0\0\0\0\0\0\0\x30\0\0\0\x84\0\0\0\
\x07\x01\0\0\x06\x9c\0\0\x38\0\0\0\x84\0\0\0\x1b\x01\0\0\x03\xd0\0\0\x80\0\0\0\
\x84\0\0\0\x1b\x01\0\0\x03\xa0\0\0\xb8\0\0\0\x84\0\0\0\x3f\x01\0\0\x05\xc0\0\0\
\xc8\0\0\0\x84\0\0\0\x1b\x01\0\0\x1f\xa0\0\0\xd0\0\0\0\x84\0\0\0\x1b\x01\0\0\
\x13\xa0\0\0\xd8\0\0\0\x84\0\0\0\x1b\x01\0\0\x03\xa0\0\0\xe8\0\0\0\x84\0\0\0\
\x66\x01\0\0\x0d\xa4\0\0\x18\x01\0\0\x84\0\0\0\x90\x01\0\0\x08\xac\0\0\x20\x01\
\0\0\x84\0\0\0\xa2\x01\0\0\x05\xb0\0\0\x48\x01\0\0\x84\0\0\0\xc9\x01\0\0\x0f\
\xb8\0\0\x60\x01\0\0\x84\0\0\0\xc9\x01\0\0\x0d\xb8\0\0\x70\x01\0\0\x84\0\0\0\
\xe3\x01\0\0\x07\x68\0\0\x78\x01\0\0\x84\0\0\0\xe3\x01\0\0\x06\x68\0\0\x80\x01\
\0\0\x84\0\0\0\xfb\x01\0\0\x07\x74\0\0\xa0\x01\0\0\x84\0\0\0\x31\x02\0\0\x0f\
\x78\0\0\xb0\x01\0\0\x84\0\0\0\x31\x02\0\0\x09\x78\0\0\xc8\x01\0\0\x84\0\0\0\
\x1b\x01\0\0\x1f\xd0\0\0\xd0\x01\0\0\x84\0\0\0\x1b\x01\0\0\x13\xd0\0\0\xd8\x01\
\0\0\x84\0\0\0\x1b\x01\0\0\x03\xd0\0\0\xe0\x01\0\0\x84\0\0\0\x7a\x02\0\0\x02\
\xec\0\0\xf0\x01\0\0\x84\0\0\0\xe3\x01\0\0\x07\x68\0\0\0\x02\0\0\x84\0\0\0\xe3\
\x01\0\0\x06\x68\0\0\x08\x02\0\0\x84\0\0\0\xfb\x01\0\0\x07\x74\0\0\x28\x02\0\0\
\x84\0\0\0\x31\x02\0\0\x0f\x78\0\0\x38\x02\0\0\x84\0\0\0\x31\x02\0\0\x09\x78\0\
\0\x48\x02\0\0\x84\0\0\0\x85\x02\0\0\x08\xd8\0\0\x78\x02\0\0\x84\0\0\0\x85\x02\
\0\0\x08\xd8\0\0\x80\x02\0\0\x84\0\0\0\xa2\x01\0\0\x05\xe0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x40\0\0\0\0\0\0\0\x22\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\
\x01\0\0\0\0\0\0\xe0\x01\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\
\0\0\0\0\0\0\x11\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x03\0\0\
\0\0\0\0\x98\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x2a\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe0\x05\0\0\0\0\0\0\x04\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x32\0\0\0\x01\
\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x05\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3a\0\0\0\x01\0\0\0\x03\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\x08\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x80\x06\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x45\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\
\x06\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xf7\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\x06\0\0\0\0\0\
\0\xe0\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\
\x14\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x07\0\0\0\0\0\0\xf8\
\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x19\x01\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x0c\0\0\0\0\0\0\x30\x02\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __RINGBUF_BENCH_SKEL_H__ */
