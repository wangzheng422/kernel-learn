/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __CONNECT4_DROPPER_SKEL_H__
#define __CONNECT4_DROPPER_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct connect4_dropper {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *connect_v4_dropper;
	} progs;
	struct {
		struct bpf_link *connect_v4_dropper;
	} links;
};

static void
connect4_dropper__destroy(struct connect4_dropper *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
connect4_dropper__create_skeleton(struct connect4_dropper *obj);

static inline struct connect4_dropper *
connect4_dropper__open_opts(const struct bpf_object_open_opts *opts)
{
	struct connect4_dropper *obj;
	int err;

	obj = (struct connect4_dropper *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = connect4_dropper__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	connect4_dropper__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct connect4_dropper *
connect4_dropper__open(void)
{
	return connect4_dropper__open_opts(NULL);
}

static inline int
connect4_dropper__load(struct connect4_dropper *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct connect4_dropper *
connect4_dropper__open_and_load(void)
{
	struct connect4_dropper *obj;
	int err;

	obj = connect4_dropper__open();
	if (!obj)
		return NULL;
	err = connect4_dropper__load(obj);
	if (err) {
		connect4_dropper__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
connect4_dropper__attach(struct connect4_dropper *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
connect4_dropper__detach(struct connect4_dropper *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *connect4_dropper__elf_bytes(size_t *sz);

static inline int
connect4_dropper__create_skeleton(struct connect4_dropper *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "connect4_dropper";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "connect_v4_dropper";
	s->progs[0].prog = &obj->progs.connect_v4_dropper;
	s->progs[0].link = &obj->links.connect_v4_dropper;

	s->data = (void *)connect4_dropper__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *connect4_dropper__elf_bytes(size_t *sz)
{
	*sz = 1888;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xa0\x05\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x07\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x63\x67\
\x72\x6f\x75\x70\x2f\x63\x6f\x6e\x6e\x65\x63\x74\x34\0\x6c\x69\x63\x65\x6e\x73\
\x65\0\x63\x6f\x6e\x6e\x65\x63\x74\x34\x5f\x64\x72\x6f\x70\x70\x65\x72\x2e\x63\
\0\x4c\x42\x42\x30\x5f\x33\0\x63\x6f\x6e\x6e\x65\x63\x74\x5f\x76\x34\x5f\x64\
\x72\x6f\x70\x70\x65\x72\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x42\x54\x46\0\
\x2e\x42\x54\x46\x2e\x65\x78\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x29\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3c\0\0\0\0\0\x03\0\x38\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x43\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x56\0\
\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\xb4\0\0\0\x01\0\0\0\x61\x12\
\x20\0\0\0\0\0\x56\x02\x04\0\x01\0\0\0\x61\x11\x18\0\0\0\0\0\xb4\0\0\0\x01\0\0\
\0\x56\x01\x01\0\xea\xd8\0\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\
\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x84\x01\0\0\x84\x01\0\0\xda\x01\0\0\0\
\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\x0a\0\0\x04\x48\0\0\0\x0f\0\0\0\x03\0\0\0\
\0\0\0\0\x1b\0\0\0\x03\0\0\0\x20\0\0\0\x24\0\0\0\x05\0\0\0\x40\0\0\0\x2d\0\0\0\
\x03\0\0\0\xc0\0\0\0\x37\0\0\0\x03\0\0\0\xe0\0\0\0\x3e\0\0\0\x03\0\0\0\0\x01\0\
\0\x43\0\0\0\x03\0\0\0\x20\x01\0\0\x4c\0\0\0\x03\0\0\0\x40\x01\0\0\x58\0\0\0\
\x05\0\0\0\x60\x01\0\0\0\0\0\0\x07\0\0\0\0\x02\0\0\x64\0\0\0\0\0\0\x08\x04\0\0\
\0\x6a\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x04\0\0\0\x77\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\
\x05\x08\0\0\0\x8b\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x0f\0\0\0\0\0\0\0\
\x01\0\0\x0d\x0a\0\0\0\x8e\0\0\0\x01\0\0\0\x92\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\
\0\x01\x96\0\0\0\x01\0\0\x0c\x09\0\0\0\xa9\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\
\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x0c\0\0\0\x06\0\0\0\x04\0\0\0\xae\0\0\0\0\0\0\
\x0e\x0d\0\0\0\x01\0\0\0\xb7\0\0\0\0\0\0\x07\0\0\0\0\xc2\x01\0\0\x01\0\0\x0f\
\x04\0\0\0\x0e\0\0\0\0\0\0\0\x04\0\0\0\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\x5f\
\x61\x64\x64\x72\0\x75\x73\x65\x72\x5f\x66\x61\x6d\x69\x6c\x79\0\x75\x73\x65\
\x72\x5f\x69\x70\x34\0\x75\x73\x65\x72\x5f\x69\x70\x36\0\x75\x73\x65\x72\x5f\
\x70\x6f\x72\x74\0\x66\x61\x6d\x69\x6c\x79\0\x74\x79\x70\x65\0\x70\x72\x6f\x74\
\x6f\x63\x6f\x6c\0\x6d\x73\x67\x5f\x73\x72\x63\x5f\x69\x70\x34\0\x6d\x73\x67\
\x5f\x73\x72\x63\x5f\x69\x70\x36\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\
\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\
\x5f\x54\x59\x50\x45\x5f\x5f\0\x73\x6b\0\x63\x74\x78\0\x69\x6e\x74\0\x63\x6f\
\x6e\x6e\x65\x63\x74\x5f\x76\x34\x5f\x64\x72\x6f\x70\x70\x65\x72\0\x63\x68\x61\
\x72\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\0\x2f\
\x72\x6f\x6f\x74\x2f\x72\x70\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\
\x2f\x6b\x65\x72\x6e\x65\x6c\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\
\x36\x2e\x31\x2e\x65\x6c\x39\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\
\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\
\x5f\x36\x34\x2f\x74\x6f\x6f\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\
\x65\x6c\x66\x74\x65\x73\x74\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\
\x63\x6f\x6e\x6e\x65\x63\x74\x34\x5f\x64\x72\x6f\x70\x70\x65\x72\x2e\x63\0\x69\
\x6e\x74\x20\x63\x6f\x6e\x6e\x65\x63\x74\x5f\x76\x34\x5f\x64\x72\x6f\x70\x70\
\x65\x72\x28\x73\x74\x72\x75\x63\x74\x20\x62\x70\x66\x5f\x73\x6f\x63\x6b\x5f\
\x61\x64\x64\x72\x20\x2a\x63\x74\x78\x29\0\x09\x69\x66\x20\x28\x63\x74\x78\x2d\
\x3e\x74\x79\x70\x65\x20\x21\x3d\x20\x53\x4f\x43\x4b\x5f\x53\x54\x52\x45\x41\
\x4d\x29\0\x09\x69\x66\x20\x28\x63\x74\x78\x2d\x3e\x75\x73\x65\x72\x5f\x70\x6f\
\x72\x74\x20\x3d\x3d\x20\x62\x70\x66\x5f\x68\x74\x6f\x6e\x73\x28\x36\x30\x31\
\x32\x30\x29\x29\0\x7d\0\x6c\x69\x63\x65\x6e\x73\x65\0\x63\x67\x72\x6f\x75\x70\
\x2f\x63\x6f\x6e\x6e\x65\x63\x74\x34\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\
\0\0\0\x14\0\0\0\x6c\0\0\0\x80\0\0\0\0\0\0\0\x08\0\0\0\xca\x01\0\0\x01\0\0\0\0\
\0\0\0\x0b\0\0\0\x10\0\0\0\xca\x01\0\0\x06\0\0\0\0\0\0\0\xc0\0\0\0\x46\x01\0\0\
\0\x44\0\0\x08\0\0\0\xc0\0\0\0\x78\x01\0\0\x0b\x4c\0\0\x10\0\0\0\xc0\0\0\0\x78\
\x01\0\0\x06\x4c\0\0\x18\0\0\0\xc0\0\0\0\x97\x01\0\0\x0b\x54\0\0\x28\0\0\0\xc0\
\0\0\0\x97\x01\0\0\x15\x54\0\0\x38\0\0\0\xc0\0\0\0\xc0\x01\0\0\x01\x60\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x6d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\xb0\0\0\0\0\0\0\0\x90\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\x18\0\0\0\0\0\0\0\x11\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\
\x01\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x21\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x80\x01\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5f\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\x01\0\0\0\0\0\0\x76\x03\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x64\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\0\0\0\0\0\xa0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __CONNECT4_DROPPER_SKEL_H__ */
