/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TEST_LWT_IP_ENCAP_SKEL_H__
#define __TEST_LWT_IP_ENCAP_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct test_lwt_ip_encap {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *bpf_lwt_encap_gre;
		struct bpf_program *bpf_lwt_encap_gre6;
	} progs;
	struct {
		struct bpf_link *bpf_lwt_encap_gre;
		struct bpf_link *bpf_lwt_encap_gre6;
	} links;
};

static void
test_lwt_ip_encap__destroy(struct test_lwt_ip_encap *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
test_lwt_ip_encap__create_skeleton(struct test_lwt_ip_encap *obj);

static inline struct test_lwt_ip_encap *
test_lwt_ip_encap__open_opts(const struct bpf_object_open_opts *opts)
{
	struct test_lwt_ip_encap *obj;
	int err;

	obj = (struct test_lwt_ip_encap *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = test_lwt_ip_encap__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	test_lwt_ip_encap__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct test_lwt_ip_encap *
test_lwt_ip_encap__open(void)
{
	return test_lwt_ip_encap__open_opts(NULL);
}

static inline int
test_lwt_ip_encap__load(struct test_lwt_ip_encap *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct test_lwt_ip_encap *
test_lwt_ip_encap__open_and_load(void)
{
	struct test_lwt_ip_encap *obj;
	int err;

	obj = test_lwt_ip_encap__open();
	if (!obj)
		return NULL;
	err = test_lwt_ip_encap__load(obj);
	if (err) {
		test_lwt_ip_encap__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
test_lwt_ip_encap__attach(struct test_lwt_ip_encap *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
test_lwt_ip_encap__detach(struct test_lwt_ip_encap *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *test_lwt_ip_encap__elf_bytes(size_t *sz);

static inline int
test_lwt_ip_encap__create_skeleton(struct test_lwt_ip_encap *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "test_lwt_ip_encap";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 2;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "bpf_lwt_encap_gre";
	s->progs[0].prog = &obj->progs.bpf_lwt_encap_gre;
	s->progs[0].link = &obj->links.bpf_lwt_encap_gre;

	s->progs[1].name = "bpf_lwt_encap_gre6";
	s->progs[1].prog = &obj->progs.bpf_lwt_encap_gre6;
	s->progs[1].link = &obj->links.bpf_lwt_encap_gre6;

	s->data = (void *)test_lwt_ip_encap__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *test_lwt_ip_encap__elf_bytes(size_t *sz)
{
	*sz = 4168;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x48\x0e\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x08\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x65\x6e\
\x63\x61\x70\x5f\x67\x72\x65\0\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\x36\0\x6c\
\x69\x63\x65\x6e\x73\x65\0\x74\x65\x73\x74\x5f\x6c\x77\x74\x5f\x69\x70\x5f\x65\
\x6e\x63\x61\x70\x2e\x63\0\x4c\x42\x42\x30\x5f\x32\0\x4c\x42\x42\x31\x5f\x32\0\
\x62\x70\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\0\x62\x70\
\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\x36\0\x5f\x6c\x69\
\x63\x65\x6e\x73\x65\0\x2e\x42\x54\x46\0\x2e\x42\x54\x46\x2e\x65\x78\x74\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2e\0\0\0\x04\0\xf1\xff\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x42\0\0\0\0\0\x03\0\xe8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x04\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x49\0\0\0\0\0\x04\0\x18\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x50\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\x62\0\0\0\
\x12\0\x04\0\0\0\0\0\0\0\0\0\x20\x01\0\0\0\0\0\0\x75\0\0\0\x11\0\x05\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x7b\x2a\xf8\xff\0\0\0\0\x7b\x2a\
\xf0\xff\0\0\0\0\x7b\x2a\xe8\xff\0\0\0\0\xb7\x02\0\0\xac\x10\x10\x64\x63\x2a\
\xf8\xff\0\0\0\0\xb7\x02\0\0\xac\x10\x01\x64\x63\x2a\xf4\xff\0\0\0\0\xb7\x02\0\
\0\x40\x2f\0\0\x6b\x2a\xf0\xff\0\0\0\0\xb7\x02\0\0\x45\0\0\0\x73\x2a\xe8\xff\0\
\0\0\0\x61\x12\0\0\0\0\0\0\x07\x02\0\0\x18\0\0\0\xdc\x02\0\0\x10\0\0\0\x6b\x2a\
\xea\xff\0\0\0\0\x61\x12\x10\0\0\0\0\0\x6b\x2a\xfe\xff\0\0\0\0\xbf\xa3\0\0\0\0\
\0\0\x07\x03\0\0\xe8\xff\xff\xff\xb7\x02\0\0\x02\0\0\0\xb7\x04\0\0\x18\0\0\0\
\x85\0\0\0\x49\0\0\0\xbf\x01\0\0\0\0\0\0\x67\x01\0\0\x20\0\0\0\x77\x01\0\0\x20\
\0\0\0\xb7\0\0\0\x80\0\0\0\x15\x01\x01\0\0\0\0\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\
\0\0\0\0\xb7\x02\0\0\0\0\0\0\x7b\x2a\xd0\xff\0\0\0\0\x63\x2a\xf8\xff\0\0\0\0\
\x7b\x2a\xf0\xff\0\0\0\0\x7b\x2a\xe8\xff\0\0\0\0\x7b\x2a\xe0\xff\0\0\0\0\x7b\
\x2a\xd8\xff\0\0\0\0\xb7\x02\0\0\x60\0\0\0\x73\x2a\xd0\xff\0\0\0\0\x61\x12\0\0\
\0\0\0\0\xb7\x03\0\0\xfb\x10\0\0\x6b\x3a\xe8\xff\0\0\0\0\xb7\x03\0\0\x01\0\0\0\
\x73\x3a\xf7\xff\0\0\0\0\x73\x3a\xe7\xff\0\0\0\0\xb7\x03\0\0\xfb\x01\0\0\x6b\
\x3a\xd8\xff\0\0\0\0\xb7\x03\0\0\x2f\x40\0\0\x6b\x3a\xd6\xff\0\0\0\0\x07\x02\0\
\0\x04\0\0\0\xdc\x02\0\0\x10\0\0\0\x6b\x2a\xd4\xff\0\0\0\0\x61\x12\x10\0\0\0\0\
\0\x6b\x2a\xfa\xff\0\0\0\0\xbf\xa3\0\0\0\0\0\0\x07\x03\0\0\xd0\xff\xff\xff\xb7\
\x02\0\0\x02\0\0\0\xb7\x04\0\0\x2c\0\0\0\x85\0\0\0\x49\0\0\0\xbf\x01\0\0\0\0\0\
\0\x67\x01\0\0\x20\0\0\0\x77\x01\0\0\x20\0\0\0\xb7\0\0\0\x80\0\0\0\x15\x01\x01\
\0\0\0\0\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\0\0\0\0\x9f\xeb\
\x01\0\x18\0\0\0\0\0\0\0\x08\x03\0\0\x08\x03\0\0\x3a\x05\0\0\0\0\0\0\0\0\0\x02\
\x02\0\0\0\x01\0\0\0\x21\0\0\x04\xc0\0\0\0\x0b\0\0\0\x03\0\0\0\0\0\0\0\x0f\0\0\
\0\x03\0\0\0\x20\0\0\0\x18\0\0\0\x03\0\0\0\x40\0\0\0\x1d\0\0\0\x03\0\0\0\x60\0\
\0\0\x2b\0\0\0\x03\0\0\0\x80\0\0\0\x34\0\0\0\x03\0\0\0\xa0\0\0\0\x41\0\0\0\x03\
\0\0\0\xc0\0\0\0\x4a\0\0\0\x03\0\0\0\xe0\0\0\0\x55\0\0\0\x03\0\0\0\0\x01\0\0\
\x5e\0\0\0\x03\0\0\0\x20\x01\0\0\x6e\0\0\0\x03\0\0\0\x40\x01\0\0\x76\0\0\0\x03\
\0\0\0\x60\x01\0\0\x7f\0\0\0\x05\0\0\0\x80\x01\0\0\x82\0\0\0\x03\0\0\0\x20\x02\
\0\0\x87\0\0\0\x03\0\0\0\x40\x02\0\0\x92\0\0\0\x03\0\0\0\x60\x02\0\0\x97\0\0\0\
\x03\0\0\0\x80\x02\0\0\xa0\0\0\0\x03\0\0\0\xa0\x02\0\0\xa8\0\0\0\x03\0\0\0\xc0\
\x02\0\0\xaf\0\0\0\x03\0\0\0\xe0\x02\0\0\xba\0\0\0\x03\0\0\0\0\x03\0\0\xc4\0\0\
\0\x07\0\0\0\x20\x03\0\0\xcf\0\0\0\x07\0\0\0\xa0\x03\0\0\xd9\0\0\0\x03\0\0\0\
\x20\x04\0\0\xe5\0\0\0\x03\0\0\0\x40\x04\0\0\xf0\0\0\0\x03\0\0\0\x60\x04\0\0\0\
\0\0\0\x08\0\0\0\x80\x04\0\0\xfa\0\0\0\x0a\0\0\0\xc0\x04\0\0\x01\x01\0\0\x03\0\
\0\0\0\x05\0\0\x0a\x01\0\0\x03\0\0\0\x20\x05\0\0\0\0\0\0\x0c\0\0\0\x40\x05\0\0\
\x13\x01\0\0\x03\0\0\0\x80\x05\0\0\x1c\x01\0\0\x0a\0\0\0\xc0\x05\0\0\x25\x01\0\
\0\0\0\0\x08\x04\0\0\0\x2b\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\
\x03\0\0\0\0\x03\0\0\0\x06\0\0\0\x05\0\0\0\x38\x01\0\0\0\0\0\x01\x04\0\0\0\x20\
\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x06\0\0\0\x04\0\0\0\0\0\0\0\x01\0\0\
\x05\x08\0\0\0\x4c\x01\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x15\0\0\0\x56\
\x01\0\0\0\0\0\x08\x0b\0\0\0\x5c\x01\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\
\x01\0\0\x05\x08\0\0\0\x6f\x01\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x16\0\0\
\0\0\0\0\0\x01\0\0\x0d\x0f\0\0\0\x72\x01\0\0\x01\0\0\0\x76\x01\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\x01\x7a\x01\0\0\x01\0\0\x0c\x0e\0\0\0\x8c\x01\0\0\x01\0\0\
\x0c\x0e\0\0\0\x9f\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\
\0\0\0\x12\0\0\0\x06\0\0\0\x04\0\0\0\xa4\x01\0\0\0\0\0\x0e\x13\0\0\0\x01\0\0\0\
\xad\x01\0\0\0\0\0\x07\0\0\0\0\xbb\x01\0\0\0\0\0\x07\0\0\0\0\x1d\x05\0\0\x01\0\
\0\x0f\x04\0\0\0\x14\0\0\0\0\0\0\0\x04\0\0\0\0\x5f\x5f\x73\x6b\x5f\x62\x75\x66\
\x66\0\x6c\x65\x6e\0\x70\x6b\x74\x5f\x74\x79\x70\x65\0\x6d\x61\x72\x6b\0\x71\
\x75\x65\x75\x65\x5f\x6d\x61\x70\x70\x69\x6e\x67\0\x70\x72\x6f\x74\x6f\x63\x6f\
\x6c\0\x76\x6c\x61\x6e\x5f\x70\x72\x65\x73\x65\x6e\x74\0\x76\x6c\x61\x6e\x5f\
\x74\x63\x69\0\x76\x6c\x61\x6e\x5f\x70\x72\x6f\x74\x6f\0\x70\x72\x69\x6f\x72\
\x69\x74\x79\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\
\x69\x66\x69\x6e\x64\x65\x78\0\x74\x63\x5f\x69\x6e\x64\x65\x78\0\x63\x62\0\x68\
\x61\x73\x68\0\x74\x63\x5f\x63\x6c\x61\x73\x73\x69\x64\0\x64\x61\x74\x61\0\x64\
\x61\x74\x61\x5f\x65\x6e\x64\0\x6e\x61\x70\x69\x5f\x69\x64\0\x66\x61\x6d\x69\
\x6c\x79\0\x72\x65\x6d\x6f\x74\x65\x5f\x69\x70\x34\0\x6c\x6f\x63\x61\x6c\x5f\
\x69\x70\x34\0\x72\x65\x6d\x6f\x74\x65\x5f\x69\x70\x36\0\x6c\x6f\x63\x61\x6c\
\x5f\x69\x70\x36\0\x72\x65\x6d\x6f\x74\x65\x5f\x70\x6f\x72\x74\0\x6c\x6f\x63\
\x61\x6c\x5f\x70\x6f\x72\x74\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x74\x73\
\x74\x61\x6d\x70\0\x77\x69\x72\x65\x5f\x6c\x65\x6e\0\x67\x73\x6f\x5f\x73\x65\
\x67\x73\0\x67\x73\x6f\x5f\x73\x69\x7a\x65\0\x68\x77\x74\x73\x74\x61\x6d\x70\0\
\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\
\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x66\
\x6c\x6f\x77\x5f\x6b\x65\x79\x73\0\x5f\x5f\x75\x36\x34\0\x75\x6e\x73\x69\x67\
\x6e\x65\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x73\x6b\0\x73\x6b\x62\0\
\x69\x6e\x74\0\x62\x70\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\x72\
\x65\0\x62\x70\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\x36\
\0\x63\x68\x61\x72\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x62\x70\x66\x5f\x66\x6c\
\x6f\x77\x5f\x6b\x65\x79\x73\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\0\x2f\x72\x6f\
\x6f\x74\x2f\x72\x70\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\
\x65\x72\x6e\x65\x6c\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\
\x31\x2e\x65\x6c\x39\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\
\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\
\x34\x2f\x74\x6f\x6f\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\
\x66\x74\x65\x73\x74\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x74\x65\
\x73\x74\x5f\x6c\x77\x74\x5f\x69\x70\x5f\x65\x6e\x63\x61\x70\x2e\x63\0\x69\x6e\
\x74\x20\x62\x70\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\
\x28\x73\x74\x72\x75\x63\x74\x20\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\x20\x2a\
\x73\x6b\x62\x29\0\x09\x6d\x65\x6d\x73\x65\x74\x28\x26\x68\x64\x72\x2c\x20\x30\
\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x73\x74\x72\x75\x63\x74\x20\x65\x6e\x63\
\x61\x70\x5f\x68\x64\x72\x29\x29\x3b\0\x09\x68\x64\x72\x2e\x69\x70\x68\x2e\x64\
\x61\x64\x64\x72\x20\x3d\x20\x30\x78\x36\x34\x31\x30\x31\x30\x61\x63\x3b\x20\
\x20\x2f\x2a\x20\x31\x37\x32\x2e\x31\x36\x2e\x31\x36\x2e\x31\x30\x30\x20\x2a\
\x2f\0\x09\x68\x64\x72\x2e\x69\x70\x68\x2e\x73\x61\x64\x64\x72\x20\x3d\x20\x30\
\x78\x36\x34\x30\x31\x31\x30\x61\x63\x3b\x20\x20\x2f\x2a\x20\x31\x37\x32\x2e\
\x31\x36\x2e\x31\x2e\x31\x30\x30\x20\x2a\x2f\0\x09\x68\x64\x72\x2e\x69\x70\x68\
\x2e\x74\x74\x6c\x20\x3d\x20\x30\x78\x34\x30\x3b\0\x09\x68\x64\x72\x2e\x69\x70\
\x68\x2e\x76\x65\x72\x73\x69\x6f\x6e\x20\x3d\x20\x34\x3b\0\x09\x68\x64\x72\x2e\
\x69\x70\x68\x2e\x74\x6f\x74\x5f\x6c\x65\x6e\x20\x3d\x20\x62\x70\x66\x5f\x68\
\x74\x6f\x6e\x73\x28\x73\x6b\x62\x2d\x3e\x6c\x65\x6e\x20\x2b\x20\x73\x69\x7a\
\x65\x6f\x66\x28\x73\x74\x72\x75\x63\x74\x20\x65\x6e\x63\x61\x70\x5f\x68\x64\
\x72\x29\x29\x3b\0\x09\x68\x64\x72\x2e\x67\x72\x65\x68\x2e\x70\x72\x6f\x74\x6f\
\x63\x6f\x6c\x20\x3d\x20\x73\x6b\x62\x2d\x3e\x70\x72\x6f\x74\x6f\x63\x6f\x6c\
\x3b\0\x09\x65\x72\x72\x20\x3d\x20\x62\x70\x66\x5f\x6c\x77\x74\x5f\x70\x75\x73\
\x68\x5f\x65\x6e\x63\x61\x70\x28\x73\x6b\x62\x2c\x20\x42\x50\x46\x5f\x4c\x57\
\x54\x5f\x45\x4e\x43\x41\x50\x5f\x49\x50\x2c\x20\x26\x68\x64\x72\x2c\0\x7d\0\
\x69\x6e\x74\x20\x62\x70\x66\x5f\x6c\x77\x74\x5f\x65\x6e\x63\x61\x70\x5f\x67\
\x72\x65\x36\x28\x73\x74\x72\x75\x63\x74\x20\x5f\x5f\x73\x6b\x5f\x62\x75\x66\
\x66\x20\x2a\x73\x6b\x62\x29\0\x09\x68\x64\x72\x2e\x69\x70\x36\x68\x64\x72\x2e\
\x76\x65\x72\x73\x69\x6f\x6e\x20\x3d\x20\x36\x3b\0\x09\x68\x64\x72\x2e\x69\x70\
\x36\x68\x64\x72\x2e\x70\x61\x79\x6c\x6f\x61\x64\x5f\x6c\x65\x6e\x20\x3d\x20\
\x62\x70\x66\x5f\x68\x74\x6f\x6e\x73\x28\x73\x6b\x62\x2d\x3e\x6c\x65\x6e\x20\
\x2b\x20\x73\x69\x7a\x65\x6f\x66\x28\x73\x74\x72\x75\x63\x74\x20\x67\x72\x65\
\x68\x64\x72\x29\x29\x3b\0\x09\x68\x64\x72\x2e\x69\x70\x36\x68\x64\x72\x2e\x64\
\x61\x64\x64\x72\x2e\x73\x36\x5f\x61\x64\x64\x72\x5b\x30\x5d\x20\x3d\x20\x30\
\x78\x66\x62\x3b\0\x09\x68\x64\x72\x2e\x69\x70\x36\x68\x64\x72\x2e\x64\x61\x64\
\x64\x72\x2e\x73\x36\x5f\x61\x64\x64\x72\x5b\x31\x35\x5d\x20\x3d\x20\x31\x3b\0\
\x09\x68\x64\x72\x2e\x69\x70\x36\x68\x64\x72\x2e\x73\x61\x64\x64\x72\x2e\x73\
\x36\x5f\x61\x64\x64\x72\x5b\x31\x35\x5d\x20\x3d\x20\x31\x3b\0\x09\x68\x64\x72\
\x2e\x69\x70\x36\x68\x64\x72\x2e\x73\x61\x64\x64\x72\x2e\x73\x36\x5f\x61\x64\
\x64\x72\x5b\x30\x5d\x20\x3d\x20\x30\x78\x66\x62\x3b\0\x09\x68\x64\x72\x2e\x69\
\x70\x36\x68\x64\x72\x2e\x6e\x65\x78\x74\x68\x64\x72\x20\x3d\x20\x34\x37\x3b\
\x20\x20\x2f\x2a\x20\x49\x50\x50\x52\x4f\x54\x4f\x5f\x47\x52\x45\x20\x2a\x2f\0\
\x6c\x69\x63\x65\x6e\x73\x65\0\x65\x6e\x63\x61\x70\x5f\x67\x72\x65\0\x65\x6e\
\x63\x61\x70\x5f\x67\x72\x65\x36\0\0\0\0\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\
\x24\0\0\0\x24\0\0\0\xe4\x01\0\0\x08\x02\0\0\0\0\0\0\x08\0\0\0\x25\x05\0\0\x01\
\0\0\0\0\0\0\0\x10\0\0\0\x2f\x05\0\0\x01\0\0\0\0\0\0\0\x11\0\0\0\x10\0\0\0\x25\
\x05\0\0\x0d\0\0\0\0\0\0\0\xc4\x01\0\0\x4b\x02\0\0\0\x40\0\0\x08\0\0\0\xc4\x01\
\0\0\x78\x02\0\0\x02\x60\0\0\x28\0\0\0\xc4\x01\0\0\xa4\x02\0\0\x10\x80\0\0\x38\
\0\0\0\xc4\x01\0\0\xd6\x02\0\0\x10\x7c\0\0\x48\0\0\0\xc4\x01\0\0\x07\x03\0\0\
\x0e\x70\0\0\x58\0\0\0\xc4\x01\0\0\x1c\x03\0\0\x12\x6c\0\0\x60\0\0\0\xc4\x01\0\
\0\x32\x03\0\0\x14\x9c\0\0\x78\0\0\0\xc4\x01\0\0\x32\x03\0\0\x12\x9c\0\0\x80\0\
\0\0\xc4\x01\0\0\x75\x03\0\0\x1b\xa4\0\0\x88\0\0\0\xc4\x01\0\0\x75\x03\0\0\x14\
\xa4\0\0\x98\0\0\0\xc4\x01\0\0\0\0\0\0\0\0\0\0\xa0\0\0\0\xc4\x01\0\0\x99\x03\0\
\0\x08\xac\0\0\xd8\0\0\0\xc4\x01\0\0\xd0\x03\0\0\x01\xc4\0\0\x2f\x05\0\0\x10\0\
\0\0\0\0\0\0\xc4\x01\0\0\xd2\x03\0\0\0\xd0\0\0\x08\0\0\0\xc4\x01\0\0\x78\x02\0\
\0\x02\xf0\0\0\x40\0\0\0\xc4\x01\0\0\0\x04\0\0\x15\xf8\0\0\x48\0\0\0\xc4\x01\0\
\0\x19\x04\0\0\x1b\xfc\0\0\x58\0\0\0\xc4\x01\0\0\x60\x04\0\0\x1e\x1c\x01\0\x68\
\0\0\0\xc4\x01\0\0\x85\x04\0\0\x1f\x24\x01\0\x70\0\0\0\xc4\x01\0\0\xa8\x04\0\0\
\x1f\x14\x01\0\x80\0\0\0\xc4\x01\0\0\xcb\x04\0\0\x1e\x0c\x01\0\x90\0\0\0\xc4\
\x01\0\0\xf0\x04\0\0\x15\0\x01\0\x98\0\0\0\xc4\x01\0\0\x19\x04\0\0\x1b\xfc\0\0\
\xa8\0\0\0\xc4\x01\0\0\x19\x04\0\0\x19\xfc\0\0\xb0\0\0\0\xc4\x01\0\0\x75\x03\0\
\0\x1b\x2c\x01\0\xb8\0\0\0\xc4\x01\0\0\x75\x03\0\0\x14\x2c\x01\0\xc8\0\0\0\xc4\
\x01\0\0\0\0\0\0\0\0\0\0\xd0\0\0\0\xc4\x01\0\0\x99\x03\0\0\x08\x34\x01\0\x08\
\x01\0\0\xc4\x01\0\0\xd0\x03\0\0\x01\x4c\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\
\0\0\0\0\0\0\x8c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\0\0\0\0\0\0\0\xd8\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x11\0\0\0\
\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\x01\0\0\0\0\0\0\xf0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1b\0\0\0\x01\0\0\0\x06\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x02\0\0\0\0\0\0\x20\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x26\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\xb8\x03\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7e\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xc0\x03\0\0\0\0\0\0\x5a\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x83\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x0c\0\0\
\0\0\0\0\x28\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __TEST_LWT_IP_ENCAP_SKEL_H__ */
