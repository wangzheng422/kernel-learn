/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */
/* THIS FILE IS AUTOGENERATED! */
#ifndef __ATOMICS_LSKEL_SKEL_H__
#define __ATOMICS_LSKEL_SKEL_H__

#include <stdlib.h>
#include <bpf/bpf.h>
#include <bpf/skel_internal.h>

struct atomics_lskel {
	struct bpf_loader_ctx ctx;
	struct {
		struct bpf_map_desc data;
		struct bpf_map_desc bss;
	} maps;
	struct {
		struct bpf_prog_desc add;
		struct bpf_prog_desc sub;
		struct bpf_prog_desc and;
		struct bpf_prog_desc or;
		struct bpf_prog_desc xor;
		struct bpf_prog_desc cmpxchg;
		struct bpf_prog_desc xchg;
	} progs;
	struct {
		int add_fd;
		int sub_fd;
		int and_fd;
		int or_fd;
		int xor_fd;
		int cmpxchg_fd;
		int xchg_fd;
	} links;
	struct atomics_lskel__data {
		_Bool skip_tests;
		char __pad0[7];
		__u64 add64_value;
		__u32 add32_value;
		char __pad1[4];
		__u64 add_noreturn_value;
		__s64 sub64_value;
		__s32 sub32_value;
		char __pad2[4];
		__s64 sub_noreturn_value;
		__u64 and64_value;
		__u32 and32_value;
		char __pad3[4];
		__u64 and_noreturn_value;
		__u64 or64_value;
		__u32 or32_value;
		char __pad4[4];
		__u64 or_noreturn_value;
		__u64 xor64_value;
		__u32 xor32_value;
		char __pad5[4];
		__u64 xor_noreturn_value;
		__u64 cmpxchg64_value;
		__u32 cmpxchg32_value;
		char __pad6[4];
		__u64 xchg64_value;
		__u32 xchg32_value;
	} *data;
	struct atomics_lskel__bss {
		__u32 pid;
		char __pad0[4];
		__u64 add64_result;
		__u32 add32_result;
		char __pad1[4];
		__u64 add_stack_value_copy;
		__u64 add_stack_result;
		__s64 sub64_result;
		__s32 sub32_result;
		char __pad2[4];
		__s64 sub_stack_value_copy;
		__s64 sub_stack_result;
		__u64 and64_result;
		__u32 and32_result;
		char __pad3[4];
		__u64 or64_result;
		__u32 or32_result;
		char __pad4[4];
		__u64 xor64_result;
		__u32 xor32_result;
		char __pad5[4];
		__u64 cmpxchg64_result_fail;
		__u64 cmpxchg64_result_succeed;
		__u32 cmpxchg32_result_fail;
		__u32 cmpxchg32_result_succeed;
		__u64 xchg64_result;
		__u32 xchg32_result;
	} *bss;
};

static inline int
atomics_lskel__add__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.add.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.add_fd = fd;
	return fd;
}

static inline int
atomics_lskel__sub__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.sub.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.sub_fd = fd;
	return fd;
}

static inline int
atomics_lskel__and__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.and.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.and_fd = fd;
	return fd;
}

static inline int
atomics_lskel__or__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.or.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.or_fd = fd;
	return fd;
}

static inline int
atomics_lskel__xor__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.xor.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.xor_fd = fd;
	return fd;
}

static inline int
atomics_lskel__cmpxchg__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.cmpxchg.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.cmpxchg_fd = fd;
	return fd;
}

static inline int
atomics_lskel__xchg__attach(struct atomics_lskel *skel)
{
	int prog_fd = skel->progs.xchg.prog_fd;
	int fd = bpf_raw_tracepoint_open(NULL, prog_fd);

	if (fd > 0)
		skel->links.xchg_fd = fd;
	return fd;
}

static inline int
atomics_lskel__attach(struct atomics_lskel *skel)
{
	int ret = 0;

	ret = ret < 0 ? ret : atomics_lskel__add__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__sub__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__and__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__or__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__xor__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__cmpxchg__attach(skel);
	ret = ret < 0 ? ret : atomics_lskel__xchg__attach(skel);
	return ret < 0 ? ret : 0;
}

static inline void
atomics_lskel__detach(struct atomics_lskel *skel)
{
	skel_closenz(skel->links.add_fd);
	skel_closenz(skel->links.sub_fd);
	skel_closenz(skel->links.and_fd);
	skel_closenz(skel->links.or_fd);
	skel_closenz(skel->links.xor_fd);
	skel_closenz(skel->links.cmpxchg_fd);
	skel_closenz(skel->links.xchg_fd);
}
static void
atomics_lskel__destroy(struct atomics_lskel *skel)
{
	if (!skel)
		return;
	atomics_lskel__detach(skel);
	skel_closenz(skel->progs.add.prog_fd);
	skel_closenz(skel->progs.sub.prog_fd);
	skel_closenz(skel->progs.and.prog_fd);
	skel_closenz(skel->progs.or.prog_fd);
	skel_closenz(skel->progs.xor.prog_fd);
	skel_closenz(skel->progs.cmpxchg.prog_fd);
	skel_closenz(skel->progs.xchg.prog_fd);
	munmap(skel->data, 4096);
	skel_closenz(skel->maps.data.map_fd);
	munmap(skel->bss, 4096);
	skel_closenz(skel->maps.bss.map_fd);
	free(skel);
}
static inline struct atomics_lskel *
atomics_lskel__open(void)
{
	struct atomics_lskel *skel;

	skel = calloc(sizeof(*skel), 1);
	if (!skel)
		goto cleanup;
	skel->ctx.sz = (void *)&skel->links - (void *)skel;
	skel->data =
		mmap(NULL, 4096, PROT_READ | PROT_WRITE,
		     MAP_SHARED | MAP_ANONYMOUS, -1, 0);
	if (skel->data == (void *) -1)
		goto cleanup;
	memcpy(skel->data, (void *)"\
\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\x10\x01\0\
\0\0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\x10\x01\0\0\x10\x01\0\0\0\0\0\0\0\0\0\0\
\x10\x01\0\0\0\0\0\0\x10\x01\0\0\x10\x01\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\x01\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0", 156);
	skel->maps.data.initial_value = (__u64)(long)skel->data;
	skel->bss =
		mmap(NULL, 4096, PROT_READ | PROT_WRITE,
		     MAP_SHARED | MAP_ANONYMOUS, -1, 0);
	if (skel->bss == (void *) -1)
		goto cleanup;
	memcpy(skel->bss, (void *)"\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 156);
	skel->maps.bss.initial_value = (__u64)(long)skel->bss;
	return skel;
cleanup:
	atomics_lskel__destroy(skel);
	return NULL;
}

static inline int
atomics_lskel__load(struct atomics_lskel *skel)
{
	struct bpf_load_and_run_opts opts = {};
	int err;

	opts.ctx = (struct bpf_loader_ctx *)skel;
	opts.data_sz = 5960;
	opts.data = (void *)"\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\
\x18\0\0\0\0\0\0\0\x88\x05\0\0\x88\x05\0\0\x57\x04\0\0\0\0\0\0\0\0\0\x02\x02\0\
\0\0\x01\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\x0d\x04\0\0\0\x14\
\0\0\0\x01\0\0\0\x18\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x1c\0\0\0\x01\0\0\
\x0c\x03\0\0\0\x20\0\0\0\x01\0\0\x0c\x03\0\0\0\x24\0\0\0\x01\0\0\x0c\x03\0\0\0\
\x28\0\0\0\x01\0\0\x0c\x03\0\0\0\x2b\0\0\0\x01\0\0\x0c\x03\0\0\0\x2f\0\0\0\x01\
\0\0\x0c\x03\0\0\0\x37\0\0\0\x01\0\0\x0c\x03\0\0\0\x3c\0\0\0\0\0\0\x01\x01\0\0\
\0\x08\0\0\x04\x42\0\0\0\0\0\0\x0e\x0c\0\0\0\x01\0\0\0\x4d\0\0\0\0\0\0\x08\x0f\
\0\0\0\x53\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\x60\0\0\0\0\0\0\x0e\x0e\0\0\0\
\x01\0\0\0\x64\0\0\0\0\0\0\x08\x02\0\0\0\x6a\0\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\
\0\x76\0\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x83\0\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\
\0\0\x8f\0\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x9c\0\0\0\0\0\0\x0e\x11\0\0\0\x01\
\0\0\0\xb1\0\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xc2\0\0\0\0\0\0\x0e\x11\0\0\0\
\x01\0\0\0\xd5\0\0\0\0\0\0\x08\x1a\0\0\0\xdb\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\
\x01\xe5\0\0\0\0\0\0\x0e\x19\0\0\0\x01\0\0\0\xf1\0\0\0\0\0\0\x0e\x19\0\0\0\x01\
\0\0\0\xfe\0\0\0\0\0\0\x08\x04\0\0\0\x04\x01\0\0\0\0\0\x0e\x1d\0\0\0\x01\0\0\0\
\x10\x01\0\0\0\0\0\x0e\x1d\0\0\0\x01\0\0\0\x1d\x01\0\0\0\0\0\x0e\x19\0\0\0\x01\
\0\0\0\x32\x01\0\0\0\0\0\x0e\x19\0\0\0\x01\0\0\0\x43\x01\0\0\0\0\0\x0e\x19\0\0\
\0\x01\0\0\0\x56\x01\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x62\x01\0\0\0\0\0\x0e\
\x11\0\0\0\x01\0\0\0\x6f\x01\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x7b\x01\0\0\0\0\
\0\x0e\x0e\0\0\0\x01\0\0\0\x88\x01\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x9b\x01\0\
\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xa6\x01\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xb2\
\x01\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\xbd\x01\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\
\0\xc9\x01\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xdb\x01\0\0\0\0\0\x0e\x11\0\0\0\
\x01\0\0\0\xe7\x01\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xf4\x01\0\0\0\0\0\x0e\x0e\
\0\0\0\x01\0\0\0\0\x02\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x0d\x02\0\0\0\0\0\x0e\
\x11\0\0\0\x01\0\0\0\x20\x02\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x30\x02\0\0\0\0\
\0\x0e\x11\0\0\0\x01\0\0\0\x46\x02\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\x5f\x02\0\
\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x6f\x02\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x85\
\x02\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x9e\x02\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\
\0\xab\x02\0\0\0\0\0\x0e\x11\0\0\0\x01\0\0\0\xb9\x02\0\0\0\0\0\x0e\x0e\0\0\0\
\x01\0\0\0\xc6\x02\0\0\0\0\0\x0e\x0e\0\0\0\x01\0\0\0\x34\x04\0\0\x14\0\0\x0f\
\x9c\0\0\0\x0d\0\0\0\0\0\0\0\x01\0\0\0\x12\0\0\0\x08\0\0\0\x08\0\0\0\x14\0\0\0\
\x10\0\0\0\x04\0\0\0\x18\0\0\0\x18\0\0\0\x08\0\0\0\x1b\0\0\0\x20\0\0\0\x08\0\0\
\0\x1e\0\0\0\x28\0\0\0\x04\0\0\0\x22\0\0\0\x30\0\0\0\x08\0\0\0\x23\0\0\0\x38\0\
\0\0\x08\0\0\0\x25\0\0\0\x40\0\0\0\x04\0\0\0\x27\0\0\0\x48\0\0\0\x08\0\0\0\x28\
\0\0\0\x50\0\0\0\x08\0\0\0\x2a\0\0\0\x58\0\0\0\x04\0\0\0\x2c\0\0\0\x60\0\0\0\
\x08\0\0\0\x2d\0\0\0\x68\0\0\0\x08\0\0\0\x2f\0\0\0\x70\0\0\0\x04\0\0\0\x31\0\0\
\0\x78\0\0\0\x08\0\0\0\x32\0\0\0\x80\0\0\0\x08\0\0\0\x35\0\0\0\x88\0\0\0\x04\0\
\0\0\x38\0\0\0\x90\0\0\0\x08\0\0\0\x3a\0\0\0\x98\0\0\0\x04\0\0\0\x3a\x04\0\0\
\x15\0\0\x0f\x9c\0\0\0\x10\0\0\0\0\0\0\0\x04\0\0\0\x13\0\0\0\x08\0\0\0\x08\0\0\
\0\x15\0\0\0\x10\0\0\0\x04\0\0\0\x16\0\0\0\x18\0\0\0\x08\0\0\0\x17\0\0\0\x20\0\
\0\0\x08\0\0\0\x1c\0\0\0\x28\0\0\0\x08\0\0\0\x1f\0\0\0\x30\0\0\0\x04\0\0\0\x20\
\0\0\0\x38\0\0\0\x08\0\0\0\x21\0\0\0\x40\0\0\0\x08\0\0\0\x24\0\0\0\x48\0\0\0\
\x08\0\0\0\x26\0\0\0\x50\0\0\0\x04\0\0\0\x29\0\0\0\x58\0\0\0\x08\0\0\0\x2b\0\0\
\0\x60\0\0\0\x04\0\0\0\x2e\0\0\0\x68\0\0\0\x08\0\0\0\x30\0\0\0\x70\0\0\0\x04\0\
\0\0\x33\0\0\0\x78\0\0\0\x08\0\0\0\x34\0\0\0\x80\0\0\0\x08\0\0\0\x36\0\0\0\x88\
\0\0\0\x04\0\0\0\x37\0\0\0\x8c\0\0\0\x04\0\0\0\x39\0\0\0\x90\0\0\0\x08\0\0\0\
\x3b\0\0\0\x98\0\0\0\x04\0\0\0\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\
\x6e\x67\x20\x6c\x6f\x6e\x67\0\x63\x74\x78\0\x69\x6e\x74\0\x61\x64\x64\0\x73\
\x75\x62\0\x61\x6e\x64\0\x6f\x72\0\x78\x6f\x72\0\x63\x6d\x70\x78\x63\x68\x67\0\
\x78\x63\x68\x67\0\x5f\x42\x6f\x6f\x6c\0\x73\x6b\x69\x70\x5f\x74\x65\x73\x74\
\x73\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\
\x70\x69\x64\0\x5f\x5f\x75\x36\x34\0\x61\x64\x64\x36\x34\x5f\x76\x61\x6c\x75\
\x65\0\x61\x64\x64\x36\x34\x5f\x72\x65\x73\x75\x6c\x74\0\x61\x64\x64\x33\x32\
\x5f\x76\x61\x6c\x75\x65\0\x61\x64\x64\x33\x32\x5f\x72\x65\x73\x75\x6c\x74\0\
\x61\x64\x64\x5f\x73\x74\x61\x63\x6b\x5f\x76\x61\x6c\x75\x65\x5f\x63\x6f\x70\
\x79\0\x61\x64\x64\x5f\x73\x74\x61\x63\x6b\x5f\x72\x65\x73\x75\x6c\x74\0\x61\
\x64\x64\x5f\x6e\x6f\x72\x65\x74\x75\x72\x6e\x5f\x76\x61\x6c\x75\x65\0\x5f\x5f\
\x73\x36\x34\0\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x73\x75\x62\x36\x34\x5f\
\x76\x61\x6c\x75\x65\0\x73\x75\x62\x36\x34\x5f\x72\x65\x73\x75\x6c\x74\0\x5f\
\x5f\x73\x33\x32\0\x73\x75\x62\x33\x32\x5f\x76\x61\x6c\x75\x65\0\x73\x75\x62\
\x33\x32\x5f\x72\x65\x73\x75\x6c\x74\0\x73\x75\x62\x5f\x73\x74\x61\x63\x6b\x5f\
\x76\x61\x6c\x75\x65\x5f\x63\x6f\x70\x79\0\x73\x75\x62\x5f\x73\x74\x61\x63\x6b\
\x5f\x72\x65\x73\x75\x6c\x74\0\x73\x75\x62\x5f\x6e\x6f\x72\x65\x74\x75\x72\x6e\
\x5f\x76\x61\x6c\x75\x65\0\x61\x6e\x64\x36\x34\x5f\x76\x61\x6c\x75\x65\0\x61\
\x6e\x64\x36\x34\x5f\x72\x65\x73\x75\x6c\x74\0\x61\x6e\x64\x33\x32\x5f\x76\x61\
\x6c\x75\x65\0\x61\x6e\x64\x33\x32\x5f\x72\x65\x73\x75\x6c\x74\0\x61\x6e\x64\
\x5f\x6e\x6f\x72\x65\x74\x75\x72\x6e\x5f\x76\x61\x6c\x75\x65\0\x6f\x72\x36\x34\
\x5f\x76\x61\x6c\x75\x65\0\x6f\x72\x36\x34\x5f\x72\x65\x73\x75\x6c\x74\0\x6f\
\x72\x33\x32\x5f\x76\x61\x6c\x75\x65\0\x6f\x72\x33\x32\x5f\x72\x65\x73\x75\x6c\
\x74\0\x6f\x72\x5f\x6e\x6f\x72\x65\x74\x75\x72\x6e\x5f\x76\x61\x6c\x75\x65\0\
\x78\x6f\x72\x36\x34\x5f\x76\x61\x6c\x75\x65\0\x78\x6f\x72\x36\x34\x5f\x72\x65\
\x73\x75\x6c\x74\0\x78\x6f\x72\x33\x32\x5f\x76\x61\x6c\x75\x65\0\x78\x6f\x72\
\x33\x32\x5f\x72\x65\x73\x75\x6c\x74\0\x78\x6f\x72\x5f\x6e\x6f\x72\x65\x74\x75\
\x72\x6e\x5f\x76\x61\x6c\x75\x65\0\x63\x6d\x70\x78\x63\x68\x67\x36\x34\x5f\x76\
\x61\x6c\x75\x65\0\x63\x6d\x70\x78\x63\x68\x67\x36\x34\x5f\x72\x65\x73\x75\x6c\
\x74\x5f\x66\x61\x69\x6c\0\x63\x6d\x70\x78\x63\x68\x67\x36\x34\x5f\x72\x65\x73\
\x75\x6c\x74\x5f\x73\x75\x63\x63\x65\x65\x64\0\x63\x6d\x70\x78\x63\x68\x67\x33\
\x32\x5f\x76\x61\x6c\x75\x65\0\x63\x6d\x70\x78\x63\x68\x67\x33\x32\x5f\x72\x65\
\x73\x75\x6c\x74\x5f\x66\x61\x69\x6c\0\x63\x6d\x70\x78\x63\x68\x67\x33\x32\x5f\
\x72\x65\x73\x75\x6c\x74\x5f\x73\x75\x63\x63\x65\x65\x64\0\x78\x63\x68\x67\x36\
\x34\x5f\x76\x61\x6c\x75\x65\0\x78\x63\x68\x67\x36\x34\x5f\x72\x65\x73\x75\x6c\
\x74\0\x78\x63\x68\x67\x33\x32\x5f\x76\x61\x6c\x75\x65\0\x78\x63\x68\x67\x33\
\x32\x5f\x72\x65\x73\x75\x6c\x74\0\x2f\x72\x6f\x6f\x74\x2f\x72\x70\x6d\x62\x75\
\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\x65\x72\x6e\x65\x6c\x2d\x35\x2e\
\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x5f\x31\x2f\
\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\
\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\x34\x2f\x74\x6f\x6f\x6c\x73\x2f\
\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\x66\x74\x65\x73\x74\x73\x2f\x62\
\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x61\x74\x6f\x6d\x69\x63\x73\x2e\x63\0\x09\
\x69\x66\x20\x28\x70\x69\x64\x20\x21\x3d\x20\x28\x62\x70\x66\x5f\x67\x65\x74\
\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\x28\x29\
\x20\x3e\x3e\x20\x33\x32\x29\x29\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\x4f\
\x47\x28\x61\x64\x64\x2c\x20\x69\x6e\x74\x20\x61\x29\0\x69\x6e\x74\x20\x42\x50\
\x46\x5f\x50\x52\x4f\x47\x28\x73\x75\x62\x2c\x20\x69\x6e\x74\x20\x61\x29\0\x69\
\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\x4f\x47\x28\x61\x6e\x64\x2c\x20\x69\x6e\
\x74\x20\x61\x29\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\x4f\x47\x28\x6f\x72\
\x2c\x20\x69\x6e\x74\x20\x61\x29\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\x4f\
\x47\x28\x78\x6f\x72\x2c\x20\x69\x6e\x74\x20\x61\x29\0\x69\x6e\x74\x20\x42\x50\
\x46\x5f\x50\x52\x4f\x47\x28\x63\x6d\x70\x78\x63\x68\x67\x2c\x20\x69\x6e\x74\
\x20\x61\x29\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x50\x52\x4f\x47\x28\x78\x63\x68\
\x67\x2c\x20\x69\x6e\x74\x20\x61\x29\0\x2e\x64\x61\x74\x61\0\x2e\x62\x73\x73\0\
\x66\x65\x6e\x74\x72\x79\x2f\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\
\x65\x73\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf7\x09\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x9c\0\0\0\x01\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\
\x61\x74\x6f\x6d\x69\x63\x73\x5f\x2e\x64\x61\x74\x61\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x3c\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\0\x10\x01\0\0\x10\x01\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\x10\x01\0\0\x10\
\x01\0\0\0\0\0\0\0\0\0\0\x10\x01\0\0\0\0\0\0\x10\x01\0\0\x10\x01\0\0\0\0\0\0\0\
\0\0\0\x10\x01\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x02\0\0\0\x04\0\0\0\x9c\0\0\0\x01\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\
\0\x61\x74\x6f\x6d\x69\x63\x73\x5f\x2e\x62\x73\x73\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x3d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\
\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\x05\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\
\x0e\x68\0\0\x01\0\0\0\xd4\x02\0\0\x81\x03\0\0\x05\x60\0\0\x1a\0\0\0\x03\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x61\x64\x64\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\x65\
\x73\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\0\0\
\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\x0e\
\xd0\0\0\x01\0\0\0\xd4\x02\0\0\x9a\x03\0\0\x05\xc8\0\0\x1a\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x73\x75\x62\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\x65\x73\
\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\0\0\0\0\
\x95\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\x0e\x30\
\x01\0\x01\0\0\0\xd4\x02\0\0\xb3\x03\0\0\x05\x28\x01\0\x1a\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x61\x6e\x64\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\x65\x73\
\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\0\0\0\0\
\x95\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\x0e\x84\
\x01\0\x01\0\0\0\xd4\x02\0\0\xcc\x03\0\0\x05\x7c\x01\0\x1a\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x6f\x72\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\x65\x73\
\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\0\0\0\0\
\x95\0\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\x0e\xd4\
\x01\0\x01\0\0\0\xd4\x02\0\0\xe4\x03\0\0\x05\xcc\x01\0\x1a\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x78\x6f\x72\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\0\
\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\x65\x73\
\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\0\0\0\0\
\x95\0\0\0\0\0\0\0\0\0\0\0\x0a\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\x0e\x28\
\x02\0\x01\0\0\0\xd4\x02\0\0\xfd\x03\0\0\x05\x20\x02\0\x1a\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x63\x6d\x70\x78\x63\x68\x67\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\
\x65\x73\x74\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x0e\0\0\0\xb7\0\0\0\
\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\x0b\0\0\0\0\0\0\0\xd4\x02\0\0\x51\x03\0\0\
\x0e\x7c\x02\0\x01\0\0\0\xd4\x02\0\0\x1a\x04\0\0\x05\x74\x02\0\x1a\0\0\0\x03\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x78\x63\x68\x67\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x08\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x02\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x66\x65\x6e\x74\x72\x79\x5f\x74\
\x65\x73\x74\x31\0\0\0\0\0\0\0\0";
	opts.insns_sz = 5384;
	opts.insns = (void *)"\
\xbf\x16\0\0\0\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\x78\xff\xff\xff\xb7\x02\0\
\0\x88\0\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\x71\0\0\0\x05\0\x29\0\0\0\0\0\x61\
\xa1\x78\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x7c\xff\
\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x80\xff\0\0\0\0\xd5\
\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x84\xff\0\0\0\0\xd5\x01\x01\0\0\
\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x88\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\
\0\0\xa8\0\0\0\x61\xa1\x8c\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\
\0\x61\xa1\x90\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\
\x94\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x98\xff\0\0\
\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\
\xa8\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\
\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\xbf\x70\0\0\0\0\0\0\x95\
\0\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x10\x0f\0\0\
\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x0c\x0f\
\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\
\x0f\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\x05\0\0\x18\x61\0\0\
\0\0\0\0\0\0\0\0\xf8\x0e\0\0\x7b\x01\0\0\0\0\0\0\xb7\x01\0\0\x12\0\0\0\x18\x62\
\0\0\0\0\0\0\0\0\0\0\xf8\x0e\0\0\xb7\x03\0\0\x1c\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\
\x07\0\0\0\0\0\0\xc5\x07\xbf\xff\0\0\0\0\x63\x7a\x78\xff\0\0\0\0\x61\xa0\x78\
\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x48\x0f\0\0\x63\x01\0\0\0\0\0\0\x61\
\x60\x20\0\0\0\0\0\x15\0\x03\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x24\x0f\0\0\
\x63\x01\0\0\0\0\0\0\xb7\x01\0\0\0\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x18\x0f\0\
\0\xb7\x03\0\0\x40\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xae\
\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x63\x71\0\0\0\0\0\0\x79\x63\
\x18\0\0\0\0\0\x15\x03\x04\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x58\x0f\0\0\
\xb7\x02\0\0\x9c\0\0\0\x85\0\0\0\x94\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x61\x20\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\x63\x01\0\0\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\xf8\x0f\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x08\x10\0\
\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x58\x0f\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x10\x10\0\0\x7b\x01\0\0\0\0\0\0\xb7\x01\0\0\x02\0\0\0\x18\x62\0\0\
\0\0\0\0\0\0\0\0\0\x10\0\0\xb7\x03\0\0\x20\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\
\0\0\0\0\0\xc5\x07\x8e\xff\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x50\x10\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x30\0\0\0\0\0\x15\0\x03\0\0\0\
\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x2c\x10\0\0\x63\x01\0\0\0\0\0\0\xb7\x01\0\0\0\
\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x20\x10\0\0\xb7\x03\0\0\x40\0\0\0\x85\0\0\0\
\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x7e\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x04\0\0\0\x63\x71\0\0\0\0\0\0\x79\x63\x28\0\0\0\0\0\x15\x03\x04\0\0\0\0\0\
\x18\x61\0\0\0\0\0\0\0\0\0\0\x60\x10\0\0\xb7\x02\0\0\x9c\0\0\0\x85\0\0\0\x94\0\
\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x61\x20\0\0\0\0\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x08\x11\0\0\x63\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\x11\
\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x10\x11\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\x60\x10\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x18\x11\0\0\x7b\x01\0\0\
\0\0\0\0\xb7\x01\0\0\x02\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x08\x11\0\0\xb7\x03\
\0\0\x20\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x5e\xff\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\x28\x11\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x80\x11\0\
\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x30\x11\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x78\x11\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x48\
\x11\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xc0\x11\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\
\0\0\0\0\0\0\0\0\0\x50\x11\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xd0\x11\0\0\x7b\x01\
\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xe8\x11\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x88\x11\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x8c\x11\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x90\x11\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\xb8\x11\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xf0\x11\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\
\x85\0\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x2d\xff\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\x70\x11\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\
\x70\0\0\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x70\x11\0\0\
\xb7\x03\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\
\0\0\0\0\0\0\xe0\x11\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\
\0\0\0\0\x85\0\0\0\xa8\0\0\0\xc5\x07\x1b\xff\0\0\0\0\x63\x7a\x80\xff\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\x08\x12\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x60\x12\0\
\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x10\x12\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x58\x12\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x28\
\x12\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xa0\x12\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\
\0\0\0\0\0\0\0\0\0\x30\x12\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xb0\x12\0\0\x7b\x01\
\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xc8\x12\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x68\x12\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x6c\x12\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x70\x12\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\x98\x12\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xd0\x12\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\
\x85\0\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xe9\xfe\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\x50\x12\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\
\x70\0\0\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x50\x12\0\0\
\xb7\x03\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\
\0\0\0\0\0\0\xc0\x12\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\
\0\0\0\0\x85\0\0\0\xa8\0\0\0\xc5\x07\xd7\xfe\0\0\0\0\x63\x7a\x84\xff\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\xe8\x12\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x40\x13\0\
\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xf0\x12\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x38\x13\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x08\
\x13\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x80\x13\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\
\0\0\0\0\0\0\0\0\0\x10\x13\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x90\x13\0\0\x7b\x01\
\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xa8\x13\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x48\x13\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x4c\x13\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x50\x13\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\x78\x13\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xb0\x13\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\
\x85\0\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xa5\xfe\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\x30\x13\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\
\x70\0\0\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x30\x13\0\0\
\xb7\x03\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\
\0\0\0\0\0\0\xa0\x13\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\
\0\0\0\0\x85\0\0\0\xa8\0\0\0\xc5\x07\x93\xfe\0\0\0\0\x63\x7a\x88\xff\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\xc8\x13\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x20\x14\0\
\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xd0\x13\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x18\x14\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xe8\
\x13\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x60\x14\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\
\0\0\0\0\0\0\0\0\0\xf0\x13\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x70\x14\0\0\x7b\x01\
\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\x88\x14\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x28\x14\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x2c\x14\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\
\0\0\0\0\0\0\x30\x14\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\x58\x14\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\x90\x14\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\
\x85\0\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x61\xfe\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\x10\x14\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\
\x70\0\0\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\x10\x14\0\0\
\xb7\x03\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\
\0\0\0\0\0\0\x80\x14\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\
\0\0\0\0\x85\0\0\0\xa8\0\0\0\xc5\x07\x4f\xfe\0\0\0\0\x63\x7a\x8c\xff\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\xa8\x14\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\
\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xb0\x14\0\0\x18\x61\0\0\0\0\0\
\0\0\0\0\0\xf8\x14\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xc8\x14\
\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x40\x15\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\
\0\0\0\0\0\0\0\xd0\x14\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x50\x15\0\0\x7b\x01\0\0\
\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x68\
\x15\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\x08\x15\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\
\0\0\x0c\x15\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\
\0\0\0\0\x10\x15\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\0\0\
\0\0\0\0\0\0\0\x38\x15\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x70\
\x15\0\0\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\
\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x1d\xfe\0\0\0\0\x18\x60\0\0\0\0\0\0\
\0\0\0\0\xf0\x14\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\x70\0\
\0\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\xf0\x14\0\0\xb7\x03\
\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\
\0\0\x60\x15\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\
\x85\0\0\0\xa8\0\0\0\xc5\x07\x0b\xfe\0\0\0\0\x63\x7a\x90\xff\0\0\0\0\x18\x60\0\
\0\0\0\0\0\0\0\0\0\x88\x15\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xe0\x15\0\0\x7b\x01\
\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x90\x15\0\0\x18\x61\0\0\0\0\0\0\0\0\0\
\0\xd8\x15\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xa8\x15\0\0\x18\
\x61\0\0\0\0\0\0\0\0\0\0\x20\x16\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\
\0\0\0\xb0\x15\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x30\x16\0\0\x7b\x01\0\0\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x48\x16\0\0\
\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xe8\x15\
\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xec\
\x15\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\
\xf0\x15\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\
\0\0\0\x18\x16\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x50\x16\0\0\
\xb7\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\0\0\xa7\
\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xd9\xfd\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\
\xd0\x15\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\x70\0\0\0\0\0\
\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\xd0\x15\0\0\xb7\x03\0\0\x80\
\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x40\
\x16\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\
\0\xa8\0\0\0\xc5\x07\xc7\xfd\0\0\0\0\x63\x7a\x94\xff\0\0\0\0\x18\x60\0\0\0\0\0\
\0\0\0\0\0\x68\x16\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xc0\x16\0\0\x7b\x01\0\0\0\0\
\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x70\x16\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xb8\
\x16\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x88\x16\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\0\x17\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\
\x90\x16\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x10\x17\0\0\x7b\x01\0\0\0\0\0\0\x18\
\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x28\x17\0\0\x7b\
\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xc8\x16\0\0\
\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xcc\x16\
\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xd0\
\x16\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\
\0\xf8\x16\0\0\x63\x01\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x30\x17\0\0\xb7\
\x02\0\0\x11\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\0\0\xa7\0\0\
\0\xbf\x07\0\0\0\0\0\0\xc5\x07\x95\xfd\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xb0\
\x16\0\0\x63\x70\x6c\0\0\0\0\0\x77\x07\0\0\x20\0\0\0\x63\x70\x70\0\0\0\0\0\xb7\
\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\xb0\x16\0\0\xb7\x03\0\0\x80\0\0\
\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x20\x17\
\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\
\xa8\0\0\0\xc5\x07\x83\xfd\0\0\0\0\x63\x7a\x98\xff\0\0\0\0\x61\xa1\x78\xff\0\0\
\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa0\x80\
\xff\0\0\0\0\x63\x06\x38\0\0\0\0\0\x61\xa0\x84\xff\0\0\0\0\x63\x06\x3c\0\0\0\0\
\0\x61\xa0\x88\xff\0\0\0\0\x63\x06\x40\0\0\0\0\0\x61\xa0\x8c\xff\0\0\0\0\x63\
\x06\x44\0\0\0\0\0\x61\xa0\x90\xff\0\0\0\0\x63\x06\x48\0\0\0\0\0\x61\xa0\x94\
\xff\0\0\0\0\x63\x06\x4c\0\0\0\0\0\x61\xa0\x98\xff\0\0\0\0\x63\x06\x50\0\0\0\0\
\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x61\x10\0\0\0\0\0\0\x63\x06\x18\0\0\0\0\
\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\x61\x10\0\0\0\0\0\0\x63\x06\x28\0\0\0\
\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0";
	err = bpf_load_and_run(&opts);
	if (err < 0)
		return err;
	skel->data =
		mmap(skel->data, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED,
			skel->maps.data.map_fd, 0);
	skel->bss =
		mmap(skel->bss, 4096, PROT_READ | PROT_WRITE, MAP_SHARED | MAP_FIXED,
			skel->maps.bss.map_fd, 0);
	return 0;
}

static inline struct atomics_lskel *
atomics_lskel__open_and_load(void)
{
	struct atomics_lskel *skel;

	skel = atomics_lskel__open();
	if (!skel)
		return NULL;
	if (atomics_lskel__load(skel)) {
		atomics_lskel__destroy(skel);
		return NULL;
	}
	return skel;
}

#endif /* __ATOMICS_LSKEL_SKEL_H__ */
