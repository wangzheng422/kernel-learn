/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TEST_TC_PEER_SKEL_H__
#define __TEST_TC_PEER_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct test_tc_peer {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *rodata;
	} maps;
	struct {
		struct bpf_program *tc_chk;
		struct bpf_program *tc_dst;
		struct bpf_program *tc_src;
		struct bpf_program *tc_dst_l3;
		struct bpf_program *tc_src_l3;
	} progs;
	struct {
		struct bpf_link *tc_chk;
		struct bpf_link *tc_dst;
		struct bpf_link *tc_src;
		struct bpf_link *tc_dst_l3;
		struct bpf_link *tc_src_l3;
	} links;
	struct test_tc_peer__rodata {
		__u32 IFINDEX_SRC;
		__u32 IFINDEX_DST;
	} *rodata;
};

static void
test_tc_peer__destroy(struct test_tc_peer *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
test_tc_peer__create_skeleton(struct test_tc_peer *obj);

static inline struct test_tc_peer *
test_tc_peer__open_opts(const struct bpf_object_open_opts *opts)
{
	struct test_tc_peer *obj;
	int err;

	obj = (struct test_tc_peer *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = test_tc_peer__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	test_tc_peer__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct test_tc_peer *
test_tc_peer__open(void)
{
	return test_tc_peer__open_opts(NULL);
}

static inline int
test_tc_peer__load(struct test_tc_peer *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct test_tc_peer *
test_tc_peer__open_and_load(void)
{
	struct test_tc_peer *obj;
	int err;

	obj = test_tc_peer__open();
	if (!obj)
		return NULL;
	err = test_tc_peer__load(obj);
	if (err) {
		test_tc_peer__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
test_tc_peer__attach(struct test_tc_peer *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
test_tc_peer__detach(struct test_tc_peer *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *test_tc_peer__elf_bytes(size_t *sz);

static inline int
test_tc_peer__create_skeleton(struct test_tc_peer *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "test_tc_peer";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "test_tc_.rodata";
	s->maps[0].map = &obj->maps.rodata;
	s->maps[0].mmaped = (void **)&obj->rodata;

	/* programs */
	s->prog_cnt = 5;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "tc_chk";
	s->progs[0].prog = &obj->progs.tc_chk;
	s->progs[0].link = &obj->links.tc_chk;

	s->progs[1].name = "tc_dst";
	s->progs[1].prog = &obj->progs.tc_dst;
	s->progs[1].link = &obj->links.tc_dst;

	s->progs[2].name = "tc_src";
	s->progs[2].prog = &obj->progs.tc_src;
	s->progs[2].link = &obj->links.tc_src;

	s->progs[3].name = "tc_dst_l3";
	s->progs[3].prog = &obj->progs.tc_dst_l3;
	s->progs[3].link = &obj->links.tc_dst_l3;

	s->progs[4].name = "tc_src_l3";
	s->progs[4].prog = &obj->progs.tc_src_l3;
	s->progs[4].link = &obj->links.tc_src_l3;

	s->data = (void *)test_tc_peer__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *test_tc_peer__elf_bytes(size_t *sz)
{
	*sz = 4480;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x40\x0f\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x09\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x74\x63\0\
\x2e\x72\x6f\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\x74\x65\x73\x74\
\x5f\x74\x63\x5f\x70\x65\x65\x72\x2e\x63\0\x4c\x42\x42\x34\x5f\x35\0\x73\x72\
\x63\x5f\x6d\x61\x63\0\x64\x73\x74\x5f\x6d\x61\x63\0\x74\x63\x5f\x63\x68\x6b\0\
\x74\x63\x5f\x64\x73\x74\0\x49\x46\x49\x4e\x44\x45\x58\x5f\x53\x52\x43\0\x74\
\x63\x5f\x73\x72\x63\0\x49\x46\x49\x4e\x44\x45\x58\x5f\x44\x53\x54\0\x74\x63\
\x5f\x64\x73\x74\x5f\x6c\x33\0\x74\x63\x5f\x73\x72\x63\x5f\x6c\x33\0\x5f\x5f\
\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x74\x63\0\x2e\x42\x54\x46\0\x2e\
\x42\x54\x46\x2e\x65\x78\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x24\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x33\0\0\0\0\0\x03\0\xe0\x01\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x3a\0\0\0\x01\0\x04\0\x08\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\
\0\x42\0\0\0\x01\0\x04\0\x0e\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\x03\0\x04\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4a\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x51\0\0\0\x12\0\x03\0\x10\0\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x58\0\0\
\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x64\0\0\0\x12\0\x03\0\x40\0\0\
\0\0\0\0\0\x30\0\0\0\0\0\0\0\x6b\0\0\0\x11\0\x04\0\x04\0\0\0\0\0\0\0\x04\0\0\0\
\0\0\0\0\x77\0\0\0\x12\0\x03\0\x70\0\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x81\0\0\0\
\x12\0\x03\0\xa0\0\0\0\0\0\0\0\x50\x01\0\0\0\0\0\0\x8b\0\0\0\x11\0\x05\0\0\0\0\
\0\0\0\0\0\x04\0\0\0\0\0\0\0\xb7\0\0\0\x02\0\0\0\x95\0\0\0\0\0\0\0\x18\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x61\x11\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x9b\
\0\0\0\x95\0\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x61\x11\0\0\0\0\0\
\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x9b\0\0\0\x95\0\0\0\0\0\0\0\x18\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x61\x11\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x17\0\0\0\
\x95\0\0\0\0\0\0\0\xbf\x16\0\0\0\0\0\0\x61\x61\x10\0\0\0\0\0\x6b\x1a\xfe\xff\0\
\0\0\0\xbf\x61\0\0\0\0\0\0\xb7\x02\0\0\x0e\0\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\
\x2b\0\0\0\xb7\x07\0\0\x02\0\0\0\x55\0\x1f\0\0\0\0\0\xbf\x61\0\0\0\0\0\0\xb7\
\x02\0\0\0\0\0\0\x18\x03\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\xb7\x04\0\0\x06\0\0\0\
\xb7\x05\0\0\0\0\0\0\x85\0\0\0\x09\0\0\0\x55\0\x17\0\0\0\0\0\xbf\x61\0\0\0\0\0\
\0\xb7\x02\0\0\x06\0\0\0\x18\x03\0\0\x0e\0\0\0\0\0\0\0\0\0\0\0\xb7\x04\0\0\x06\
\0\0\0\xb7\x05\0\0\0\0\0\0\x85\0\0\0\x09\0\0\0\x55\0\x0f\0\0\0\0\0\xbf\xa3\0\0\
\0\0\0\0\x07\x03\0\0\xfe\xff\xff\xff\xb7\x07\0\0\x02\0\0\0\xbf\x61\0\0\0\0\0\0\
\xb7\x02\0\0\x0c\0\0\0\xb7\x04\0\0\x02\0\0\0\xb7\x05\0\0\0\0\0\0\x85\0\0\0\x09\
\0\0\0\x55\0\x06\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x61\x11\0\0\0\0\
\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x9b\0\0\0\xbf\x07\0\0\0\0\0\0\xbf\x70\0\0\0\
\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x22\x33\x44\x55\0\x22\x33\x44\
\x55\x66\x47\x50\x4c\0\x10\0\0\0\0\0\0\0\x01\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\
\x01\0\0\0\x0b\0\0\0\x70\0\0\0\0\0\0\0\x01\0\0\0\x09\0\0\0\xf8\0\0\0\0\0\0\0\
\x01\0\0\0\x06\0\0\0\x38\x01\0\0\0\0\0\0\x01\0\0\0\x06\0\0\0\xb0\x01\0\0\0\0\0\
\0\x01\0\0\0\x0b\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\0\x04\0\0\0\x04\0\0\x76\
\x04\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\x21\0\0\x04\xc0\0\0\0\x0b\0\0\0\
\x03\0\0\0\0\0\0\0\x0f\0\0\0\x03\0\0\0\x20\0\0\0\x18\0\0\0\x03\0\0\0\x40\0\0\0\
\x1d\0\0\0\x03\0\0\0\x60\0\0\0\x2b\0\0\0\x03\0\0\0\x80\0\0\0\x34\0\0\0\x03\0\0\
\0\xa0\0\0\0\x41\0\0\0\x03\0\0\0\xc0\0\0\0\x4a\0\0\0\x03\0\0\0\xe0\0\0\0\x55\0\
\0\0\x03\0\0\0\0\x01\0\0\x5e\0\0\0\x03\0\0\0\x20\x01\0\0\x6e\0\0\0\x03\0\0\0\
\x40\x01\0\0\x76\0\0\0\x03\0\0\0\x60\x01\0\0\x7f\0\0\0\x05\0\0\0\x80\x01\0\0\
\x82\0\0\0\x03\0\0\0\x20\x02\0\0\x87\0\0\0\x03\0\0\0\x40\x02\0\0\x92\0\0\0\x03\
\0\0\0\x60\x02\0\0\x97\0\0\0\x03\0\0\0\x80\x02\0\0\xa0\0\0\0\x03\0\0\0\xa0\x02\
\0\0\xa8\0\0\0\x03\0\0\0\xc0\x02\0\0\xaf\0\0\0\x03\0\0\0\xe0\x02\0\0\xba\0\0\0\
\x03\0\0\0\0\x03\0\0\xc4\0\0\0\x07\0\0\0\x20\x03\0\0\xcf\0\0\0\x07\0\0\0\xa0\
\x03\0\0\xd9\0\0\0\x03\0\0\0\x20\x04\0\0\xe5\0\0\0\x03\0\0\0\x40\x04\0\0\xf0\0\
\0\0\x03\0\0\0\x60\x04\0\0\0\0\0\0\x08\0\0\0\x80\x04\0\0\xfa\0\0\0\x0a\0\0\0\
\xc0\x04\0\0\x01\x01\0\0\x03\0\0\0\0\x05\0\0\x0a\x01\0\0\x03\0\0\0\x20\x05\0\0\
\0\0\0\0\x0c\0\0\0\x40\x05\0\0\x13\x01\0\0\x03\0\0\0\x80\x05\0\0\x1c\x01\0\0\
\x0a\0\0\0\xc0\x05\0\0\x25\x01\0\0\0\0\0\x08\x04\0\0\0\x2b\x01\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x06\0\0\0\x05\0\0\0\
\x38\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\
\x06\0\0\0\x04\0\0\0\0\0\0\0\x01\0\0\x05\x08\0\0\0\x4c\x01\0\0\x09\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x02\x22\0\0\0\x56\x01\0\0\0\0\0\x08\x0b\0\0\0\x5c\x01\0\0\0\0\
\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x01\0\0\x05\x08\0\0\0\x6f\x01\0\0\x0d\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x02\x23\0\0\0\0\0\0\0\x01\0\0\x0d\x0f\0\0\0\x72\x01\0\0\
\x01\0\0\0\x76\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x7a\x01\0\0\x01\0\0\x0c\
\x0e\0\0\0\x81\x01\0\0\x01\0\0\x0c\x0e\0\0\0\x88\x01\0\0\x01\0\0\x0c\x0e\0\0\0\
\x8f\x01\0\0\x01\0\0\x0c\x0e\0\0\0\x99\x01\0\0\x01\0\0\x0c\x0e\0\0\0\0\0\0\0\0\
\0\0\x0a\x16\0\0\0\0\0\0\0\0\0\0\x09\x03\0\0\0\xa3\x01\0\0\0\0\0\x0e\x15\0\0\0\
\x01\0\0\0\xaf\x01\0\0\0\0\0\x0e\x15\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x0a\x1a\0\0\
\0\xbb\x01\0\0\0\0\0\x08\x1b\0\0\0\xc0\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\0\
\0\0\0\0\0\0\x03\0\0\0\0\x19\0\0\0\x06\0\0\0\x06\0\0\0\xce\x01\0\0\0\0\0\x0e\
\x1c\0\0\0\0\0\0\0\xd6\x01\0\0\0\0\0\x0e\x1c\0\0\0\0\0\0\0\xde\x01\0\0\0\0\0\
\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x1f\0\0\0\x06\0\0\0\x04\0\
\0\0\xe3\x01\0\0\0\0\0\x0e\x20\0\0\0\x01\0\0\0\xed\x01\0\0\0\0\0\x07\0\0\0\0\
\xfb\x01\0\0\0\0\0\x07\0\0\0\0\x63\x04\0\0\x04\0\0\x0f\x14\0\0\0\x17\0\0\0\0\0\
\0\0\x04\0\0\0\x18\0\0\0\x04\0\0\0\x04\0\0\0\x1d\0\0\0\x08\0\0\0\x06\0\0\0\x1e\
\0\0\0\x0e\0\0\0\x06\0\0\0\x6b\x04\0\0\x01\0\0\x0f\x04\0\0\0\x21\0\0\0\0\0\0\0\
\x04\0\0\0\0\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\0\x6c\x65\x6e\0\x70\x6b\x74\
\x5f\x74\x79\x70\x65\0\x6d\x61\x72\x6b\0\x71\x75\x65\x75\x65\x5f\x6d\x61\x70\
\x70\x69\x6e\x67\0\x70\x72\x6f\x74\x6f\x63\x6f\x6c\0\x76\x6c\x61\x6e\x5f\x70\
\x72\x65\x73\x65\x6e\x74\0\x76\x6c\x61\x6e\x5f\x74\x63\x69\0\x76\x6c\x61\x6e\
\x5f\x70\x72\x6f\x74\x6f\0\x70\x72\x69\x6f\x72\x69\x74\x79\0\x69\x6e\x67\x72\
\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x69\x66\x69\x6e\x64\x65\x78\0\
\x74\x63\x5f\x69\x6e\x64\x65\x78\0\x63\x62\0\x68\x61\x73\x68\0\x74\x63\x5f\x63\
\x6c\x61\x73\x73\x69\x64\0\x64\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\
\x6e\x61\x70\x69\x5f\x69\x64\0\x66\x61\x6d\x69\x6c\x79\0\x72\x65\x6d\x6f\x74\
\x65\x5f\x69\x70\x34\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\x34\0\x72\x65\x6d\x6f\
\x74\x65\x5f\x69\x70\x36\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\x36\0\x72\x65\x6d\
\x6f\x74\x65\x5f\x70\x6f\x72\x74\0\x6c\x6f\x63\x61\x6c\x5f\x70\x6f\x72\x74\0\
\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x74\x73\x74\x61\x6d\x70\0\x77\x69\x72\
\x65\x5f\x6c\x65\x6e\0\x67\x73\x6f\x5f\x73\x65\x67\x73\0\x67\x73\x6f\x5f\x73\
\x69\x7a\x65\0\x68\x77\x74\x73\x74\x61\x6d\x70\0\x5f\x5f\x75\x33\x32\0\x75\x6e\
\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\
\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x66\x6c\x6f\x77\x5f\x6b\x65\x79\x73\
\0\x5f\x5f\x75\x36\x34\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\
\x20\x6c\x6f\x6e\x67\0\x73\x6b\0\x73\x6b\x62\0\x69\x6e\x74\0\x74\x63\x5f\x63\
\x68\x6b\0\x74\x63\x5f\x64\x73\x74\0\x74\x63\x5f\x73\x72\x63\0\x74\x63\x5f\x64\
\x73\x74\x5f\x6c\x33\0\x74\x63\x5f\x73\x72\x63\x5f\x6c\x33\0\x49\x46\x49\x4e\
\x44\x45\x58\x5f\x53\x52\x43\0\x49\x46\x49\x4e\x44\x45\x58\x5f\x44\x53\x54\0\
\x5f\x5f\x75\x38\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x73\
\x72\x63\x5f\x6d\x61\x63\0\x64\x73\x74\x5f\x6d\x61\x63\0\x63\x68\x61\x72\0\x5f\
\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x62\x70\x66\x5f\x66\x6c\x6f\x77\x5f\x6b\x65\
\x79\x73\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\0\x2f\x72\x6f\x6f\x74\x2f\x72\x70\
\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\x65\x72\x6e\x65\x6c\
\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\
\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\
\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\x34\x2f\x74\x6f\x6f\
\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\x66\x74\x65\x73\x74\
\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x74\x65\x73\x74\x5f\x74\x63\
\x5f\x70\x65\x65\x72\x2e\x63\0\x09\x72\x65\x74\x75\x72\x6e\x20\x54\x43\x5f\x41\
\x43\x54\x5f\x53\x48\x4f\x54\x3b\0\x09\x72\x65\x74\x75\x72\x6e\x20\x62\x70\x66\
\x5f\x72\x65\x64\x69\x72\x65\x63\x74\x5f\x70\x65\x65\x72\x28\x49\x46\x49\x4e\
\x44\x45\x58\x5f\x53\x52\x43\x2c\x20\x30\x29\x3b\0\x09\x72\x65\x74\x75\x72\x6e\
\x20\x62\x70\x66\x5f\x72\x65\x64\x69\x72\x65\x63\x74\x5f\x70\x65\x65\x72\x28\
\x49\x46\x49\x4e\x44\x45\x58\x5f\x44\x53\x54\x2c\x20\x30\x29\x3b\0\x09\x72\x65\
\x74\x75\x72\x6e\x20\x62\x70\x66\x5f\x72\x65\x64\x69\x72\x65\x63\x74\x28\x49\
\x46\x49\x4e\x44\x45\x58\x5f\x53\x52\x43\x2c\x20\x30\x29\x3b\0\x69\x6e\x74\x20\
\x74\x63\x5f\x73\x72\x63\x5f\x6c\x33\x28\x73\x74\x72\x75\x63\x74\x20\x5f\x5f\
\x73\x6b\x5f\x62\x75\x66\x66\x20\x2a\x73\x6b\x62\x29\0\x09\x5f\x5f\x75\x31\x36\
\x20\x70\x72\x6f\x74\x6f\x20\x3d\x20\x73\x6b\x62\x2d\x3e\x70\x72\x6f\x74\x6f\
\x63\x6f\x6c\x3b\0\x09\x69\x66\x20\x28\x62\x70\x66\x5f\x73\x6b\x62\x5f\x63\x68\
\x61\x6e\x67\x65\x5f\x68\x65\x61\x64\x28\x73\x6b\x62\x2c\x20\x45\x54\x48\x5f\
\x48\x4c\x45\x4e\x2c\x20\x30\x29\x20\x21\x3d\x20\x30\x29\0\x09\x69\x66\x20\x28\
\x62\x70\x66\x5f\x73\x6b\x62\x5f\x73\x74\x6f\x72\x65\x5f\x62\x79\x74\x65\x73\
\x28\x73\x6b\x62\x2c\x20\x30\x2c\x20\x26\x73\x72\x63\x5f\x6d\x61\x63\x2c\x20\
\x45\x54\x48\x5f\x41\x4c\x45\x4e\x2c\x20\x30\x29\x20\x21\x3d\x20\x30\x29\0\x09\
\x69\x66\x20\x28\x62\x70\x66\x5f\x73\x6b\x62\x5f\x73\x74\x6f\x72\x65\x5f\x62\
\x79\x74\x65\x73\x28\x73\x6b\x62\x2c\x20\x45\x54\x48\x5f\x41\x4c\x45\x4e\x2c\
\x20\x26\x64\x73\x74\x5f\x6d\x61\x63\x2c\x20\x45\x54\x48\x5f\x41\x4c\x45\x4e\
\x2c\x20\x30\x29\x20\x21\x3d\x20\x30\x29\0\x09\x69\x66\x20\x28\x62\x70\x66\x5f\
\x73\x6b\x62\x5f\x73\x74\x6f\x72\x65\x5f\x62\x79\x74\x65\x73\x28\x73\x6b\x62\
\x2c\x20\x45\x54\x48\x5f\x41\x4c\x45\x4e\x20\x2b\x20\x45\x54\x48\x5f\x41\x4c\
\x45\x4e\x2c\x20\x26\x70\x72\x6f\x74\x6f\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\
\x5f\x5f\x75\x31\x36\x29\x2c\x20\x30\x29\x20\x21\x3d\x20\x30\x29\0\x7d\0\x2e\
\x72\x6f\x64\x61\x74\x61\0\x6c\x69\x63\x65\x6e\x73\x65\0\x74\x63\0\0\0\x9f\xeb\
\x01\0\x20\0\0\0\0\0\0\0\x34\0\0\0\x34\0\0\0\x9c\x01\0\0\xd0\x01\0\0\0\0\0\0\
\x08\0\0\0\x73\x04\0\0\x05\0\0\0\0\0\0\0\x10\0\0\0\x10\0\0\0\x11\0\0\0\x40\0\0\
\0\x12\0\0\0\x70\0\0\0\x13\0\0\0\xa0\0\0\0\x14\0\0\0\x10\0\0\0\x73\x04\0\0\x19\
\0\0\0\0\0\0\0\x04\x02\0\0\x86\x02\0\0\x02\x58\0\0\x10\0\0\0\x04\x02\0\0\x9b\
\x02\0\0\x1b\x70\0\0\x20\0\0\0\x04\x02\0\0\x9b\x02\0\0\x09\x70\0\0\x38\0\0\0\
\x04\x02\0\0\x9b\x02\0\0\x02\x70\0\0\x40\0\0\0\x04\x02\0\0\xc6\x02\0\0\x1b\x88\
\0\0\x50\0\0\0\x04\x02\0\0\xc6\x02\0\0\x09\x88\0\0\x68\0\0\0\x04\x02\0\0\xc6\
\x02\0\0\x02\x88\0\0\x70\0\0\0\x04\x02\0\0\xf1\x02\0\0\x16\xa0\0\0\x80\0\0\0\
\x04\x02\0\0\xf1\x02\0\0\x09\xa0\0\0\x98\0\0\0\x04\x02\0\0\xf1\x02\0\0\x02\xa0\
\0\0\xa0\0\0\0\x04\x02\0\0\x17\x03\0\0\0\xb0\0\0\xa8\0\0\0\x04\x02\0\0\x3c\x03\
\0\0\x15\xb8\0\0\xb0\0\0\0\x04\x02\0\0\x3c\x03\0\0\x08\xb8\0\0\xb8\0\0\0\x04\
\x02\0\0\x5a\x03\0\0\x06\xc0\0\0\xe0\0\0\0\x04\x02\0\0\x5a\x03\0\0\x06\xc0\0\0\
\xe8\0\0\0\x04\x02\0\0\x8b\x03\0\0\x06\xcc\0\0\x20\x01\0\0\x04\x02\0\0\x8b\x03\
\0\0\x06\xcc\0\0\x28\x01\0\0\x04\x02\0\0\xc9\x03\0\0\x06\xd8\0\0\x60\x01\0\0\
\x04\x02\0\0\xc9\x03\0\0\x06\xd8\0\0\x70\x01\0\0\x04\x02\0\0\0\0\0\0\0\0\0\0\
\x80\x01\0\0\x04\x02\0\0\x0e\x04\0\0\x06\xe4\0\0\xa8\x01\0\0\x04\x02\0\0\x0e\
\x04\0\0\x06\xe4\0\0\xb0\x01\0\0\x04\x02\0\0\xc6\x02\0\0\x1b\xf0\0\0\xc0\x01\0\
\0\x04\x02\0\0\xc6\x02\0\0\x09\xf0\0\0\xe0\x01\0\0\x04\x02\0\0\x61\x04\0\0\x01\
\xf4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\
\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xaa\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\x68\x01\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\
\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x11\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x58\x02\0\0\0\0\0\0\xf0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x14\0\0\0\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\
\x04\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x1c\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5c\x04\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x95\0\0\
\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x04\0\0\0\0\0\0\x60\0\0\0\0\
\0\0\0\x02\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x9c\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc0\x04\0\0\0\0\0\0\x8e\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa1\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x50\x0d\0\0\0\0\0\0\xf0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __TEST_TC_PEER_SKEL_H__ */
