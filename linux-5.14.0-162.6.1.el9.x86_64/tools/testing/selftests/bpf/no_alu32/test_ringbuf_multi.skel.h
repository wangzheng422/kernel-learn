/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TEST_RINGBUF_MULTI_SKEL_H__
#define __TEST_RINGBUF_MULTI_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct test_ringbuf_multi {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *ringbuf1;
		struct bpf_map *ringbuf2;
		struct bpf_map *ringbuf_arr;
		struct bpf_map *ringbuf_hash;
		struct bpf_map *bss;
	} maps;
	struct {
		struct bpf_program *test_ringbuf;
	} progs;
	struct {
		struct bpf_link *test_ringbuf;
	} links;
	struct test_ringbuf_multi__bss {
		int pid;
		int target_ring;
		long value;
		long total;
		long dropped;
		long skipped;
	} *bss;
};

static void
test_ringbuf_multi__destroy(struct test_ringbuf_multi *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
test_ringbuf_multi__create_skeleton(struct test_ringbuf_multi *obj);

static inline struct test_ringbuf_multi *
test_ringbuf_multi__open_opts(const struct bpf_object_open_opts *opts)
{
	struct test_ringbuf_multi *obj;
	int err;

	obj = (struct test_ringbuf_multi *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = test_ringbuf_multi__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	test_ringbuf_multi__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct test_ringbuf_multi *
test_ringbuf_multi__open(void)
{
	return test_ringbuf_multi__open_opts(NULL);
}

static inline int
test_ringbuf_multi__load(struct test_ringbuf_multi *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct test_ringbuf_multi *
test_ringbuf_multi__open_and_load(void)
{
	struct test_ringbuf_multi *obj;
	int err;

	obj = test_ringbuf_multi__open();
	if (!obj)
		return NULL;
	err = test_ringbuf_multi__load(obj);
	if (err) {
		test_ringbuf_multi__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
test_ringbuf_multi__attach(struct test_ringbuf_multi *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
test_ringbuf_multi__detach(struct test_ringbuf_multi *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *test_ringbuf_multi__elf_bytes(size_t *sz);

static inline int
test_ringbuf_multi__create_skeleton(struct test_ringbuf_multi *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "test_ringbuf_multi";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 5;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "ringbuf1";
	s->maps[0].map = &obj->maps.ringbuf1;

	s->maps[1].name = "ringbuf2";
	s->maps[1].map = &obj->maps.ringbuf2;

	s->maps[2].name = "ringbuf_arr";
	s->maps[2].map = &obj->maps.ringbuf_arr;

	s->maps[3].name = "ringbuf_hash";
	s->maps[3].map = &obj->maps.ringbuf_hash;

	s->maps[4].name = "test_rin.bss";
	s->maps[4].map = &obj->maps.bss;
	s->maps[4].mmaped = (void **)&obj->bss;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "test_ringbuf";
	s->progs[0].prog = &obj->progs.test_ringbuf;
	s->progs[0].link = &obj->links.test_ringbuf;

	s->data = (void *)test_ringbuf_multi__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *test_ringbuf_multi__elf_bytes(size_t *sz)
{
	*sz = 4296;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\x0e\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0b\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x74\x70\
\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\
\x5f\x67\x65\x74\x70\x67\x69\x64\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x6d\x61\
\x70\x73\0\x2e\x62\x73\x73\0\x74\x65\x73\x74\x5f\x72\x69\x6e\x67\x62\x75\x66\
\x5f\x6d\x75\x6c\x74\x69\x2e\x63\0\x4c\x42\x42\x30\x5f\x37\0\x4c\x42\x42\x30\
\x5f\x34\0\x4c\x42\x42\x30\x5f\x33\0\x4c\x42\x42\x30\x5f\x36\0\x74\x65\x73\x74\
\x5f\x72\x69\x6e\x67\x62\x75\x66\0\x70\x69\x64\0\x72\x69\x6e\x67\x62\x75\x66\
\x5f\x61\x72\x72\0\x74\x61\x72\x67\x65\x74\x5f\x72\x69\x6e\x67\0\x73\x6b\x69\
\x70\x70\x65\x64\0\x64\x72\x6f\x70\x70\x65\x64\0\x76\x61\x6c\x75\x65\0\x74\x6f\
\x74\x61\x6c\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x72\x69\x6e\x67\x62\x75\x66\
\x31\0\x72\x69\x6e\x67\x62\x75\x66\x32\0\x72\x69\x6e\x67\x62\x75\x66\x5f\x68\
\x61\x73\x68\0\x2e\x72\x65\x6c\x74\x70\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\
\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x67\x65\x74\x70\x67\x69\x64\0\x2e\x72\
\x65\x6c\x2e\x6d\x61\x70\x73\0\x2e\x42\x54\x46\0\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x42\0\0\0\
\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x57\0\0\0\0\0\x03\0\x98\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x5e\0\0\0\0\0\x03\0\x80\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x65\0\0\0\0\0\x03\0\xc8\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x6c\0\0\0\0\0\x03\0\xf0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x73\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xa8\x01\0\0\0\0\0\0\x80\0\0\0\x11\
\0\x06\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x84\0\0\0\x11\0\x05\0\x10\0\0\0\0\0\
\0\0\x30\0\0\0\0\0\0\0\x90\0\0\0\x11\0\x06\0\x04\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\
\0\x9c\0\0\0\x11\0\x06\0\x20\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xa4\0\0\0\x11\0\
\x06\0\x18\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xac\0\0\0\x11\0\x06\0\x08\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\xb2\0\0\0\x11\0\x06\0\x10\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\
\0\xb8\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\xc1\0\0\0\x11\0\x05\
\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\xca\0\0\0\x11\0\x05\0\x08\0\0\0\0\0\0\0\
\x08\0\0\0\0\0\0\0\xd3\0\0\0\x11\0\x05\0\x40\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x85\0\0\0\x0e\0\0\0\xb7\x06\0\0\0\0\0\0\x77\0\0\0\x20\0\0\0\x18\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x61\x11\0\0\0\0\0\0\x5d\x01\x2c\0\0\0\0\0\x18\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\x55\
\0\x03\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x05\0\x09\0\0\0\0\0\xb7\
\x06\0\0\0\0\0\0\xbf\x01\0\0\0\0\0\0\xb7\x02\0\0\x20\0\0\0\xb7\x03\0\0\0\0\0\0\
\x85\0\0\0\x83\0\0\0\xbf\x07\0\0\0\0\0\0\x55\x07\x07\0\0\0\0\0\x18\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x79\x12\0\0\0\0\0\0\x07\x02\0\0\x01\0\0\0\x7b\x21\0\0\0\0\
\0\0\xb7\x06\0\0\x01\0\0\0\x05\0\x15\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x61\x11\0\0\0\0\0\0\x63\x17\0\0\0\0\0\0\xbf\x71\0\0\0\0\0\0\x07\x01\0\0\
\x10\0\0\0\xb7\x02\0\0\x10\0\0\0\x85\0\0\0\x10\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x79\x11\0\0\0\0\0\0\x7b\x17\x08\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x79\x12\0\0\0\0\0\0\x63\x27\x04\0\0\0\0\0\x07\x02\0\0\x01\0\0\0\x7b\
\x21\0\0\0\0\0\0\xbf\x71\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x84\0\0\0\
\xbf\x60\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x01\0\0\0\x08\0\0\0\x38\0\0\0\0\0\0\0\x01\
\0\0\0\x09\0\0\0\x48\0\0\0\0\0\0\0\x01\0\0\0\x0a\0\0\0\x68\0\0\0\0\0\0\0\x01\0\
\0\0\x0b\0\0\0\xb8\0\0\0\0\0\0\0\x01\0\0\0\x0c\0\0\0\xf0\0\0\0\0\0\0\0\x01\0\0\
\0\x08\0\0\0\x30\x01\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x50\x01\0\0\0\0\0\0\x01\0\
\0\0\x0e\0\0\0\x28\0\0\0\0\0\0\0\x02\0\0\0\x10\0\0\0\x38\0\0\0\0\0\0\0\x02\0\0\
\0\x11\0\0\0\x58\0\0\0\0\0\0\0\x02\0\0\0\x10\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\
\0\0\x50\x03\0\0\x50\x03\0\0\x11\x03\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\
\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\
\x1b\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\x19\0\0\0\x01\0\0\x04\x08\0\
\0\0\x25\0\0\0\x01\0\0\0\0\0\0\0\x2a\0\0\0\0\0\0\x0e\x05\0\0\0\x01\0\0\0\x33\0\
\0\0\0\0\0\x0e\x05\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x09\0\0\0\0\0\0\0\0\0\0\
\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\x02\x0b\0\0\0\0\0\0\0\
\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\0\
\0\0\0\0\0\0\x02\x05\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0d\0\0\0\x04\0\0\0\0\0\0\
\0\0\0\0\0\x04\0\0\x04\x18\0\0\0\x25\0\0\0\x08\0\0\0\0\0\0\0\x3c\0\0\0\x0a\0\0\
\0\x40\0\0\0\x48\0\0\0\x0c\0\0\0\x80\0\0\0\x4c\0\0\0\x0e\0\0\0\xc0\0\0\0\x53\0\
\0\0\0\0\0\x0e\x0f\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x12\0\0\0\0\0\0\0\0\0\0\
\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x0d\0\0\0\0\0\0\0\0\0\0\x02\x14\0\0\0\0\0\0\0\
\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x01\0\0\0\0\0\0\0\x04\0\0\x04\x18\0\0\0\
\x25\0\0\0\x11\0\0\0\0\0\0\0\x3c\0\0\0\x13\0\0\0\x40\0\0\0\x48\0\0\0\x0c\0\0\0\
\x80\0\0\0\x4c\0\0\0\x0e\0\0\0\xc0\0\0\0\x5f\0\0\0\0\0\0\x0e\x15\0\0\0\x01\0\0\
\0\0\0\0\0\0\0\0\x02\0\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\x6c\0\0\0\x17\0\0\0\
\x70\0\0\0\x01\0\0\x0c\x18\0\0\0\x7d\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\
\0\0\0\0\0\x03\0\0\0\0\x1a\0\0\0\x04\0\0\0\x04\0\0\0\x82\0\0\0\0\0\0\x0e\x1b\0\
\0\0\x01\0\0\0\x8b\0\0\0\0\0\0\x0e\x02\0\0\0\x01\0\0\0\x8f\0\0\0\0\0\0\x0e\x02\
\0\0\0\x01\0\0\0\x9b\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\x01\xa0\0\0\0\0\0\0\x0e\
\x1f\0\0\0\x01\0\0\0\xa6\0\0\0\0\0\0\x0e\x1f\0\0\0\x01\0\0\0\xac\0\0\0\0\0\0\
\x0e\x1f\0\0\0\x01\0\0\0\xb4\0\0\0\0\0\0\x0e\x1f\0\0\0\x01\0\0\0\xe0\x02\0\0\
\x01\0\0\x0f\x04\0\0\0\x1c\0\0\0\0\0\0\0\x04\0\0\0\xe8\x02\0\0\x04\0\0\x0f\x60\
\0\0\0\x06\0\0\0\0\0\0\0\x08\0\0\0\x07\0\0\0\x08\0\0\0\x08\0\0\0\x10\0\0\0\x10\
\0\0\0\x30\0\0\0\x16\0\0\0\x40\0\0\0\x20\0\0\0\xee\x02\0\0\x06\0\0\x0f\x28\0\0\
\0\x1d\0\0\0\0\0\0\0\x04\0\0\0\x1e\0\0\0\x04\0\0\0\x04\0\0\0\x20\0\0\0\x08\0\0\
\0\x08\0\0\0\x21\0\0\0\x10\0\0\0\x08\0\0\0\x22\0\0\0\x18\0\0\0\x08\0\0\0\x23\0\
\0\0\x20\0\0\0\x08\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\
\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x72\x69\x6e\x67\x62\x75\x66\x5f\x6d\
\x61\x70\0\x74\x79\x70\x65\0\x72\x69\x6e\x67\x62\x75\x66\x31\0\x72\x69\x6e\x67\
\x62\x75\x66\x32\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6b\x65\x79\0\
\x76\x61\x6c\x75\x65\x73\0\x72\x69\x6e\x67\x62\x75\x66\x5f\x61\x72\x72\0\x72\
\x69\x6e\x67\x62\x75\x66\x5f\x68\x61\x73\x68\0\x63\x74\x78\0\x74\x65\x73\x74\
\x5f\x72\x69\x6e\x67\x62\x75\x66\0\x63\x68\x61\x72\0\x5f\x6c\x69\x63\x65\x6e\
\x73\x65\0\x70\x69\x64\0\x74\x61\x72\x67\x65\x74\x5f\x72\x69\x6e\x67\0\x6c\x6f\
\x6e\x67\0\x76\x61\x6c\x75\x65\0\x74\x6f\x74\x61\x6c\0\x64\x72\x6f\x70\x70\x65\
\x64\0\x73\x6b\x69\x70\x70\x65\x64\0\x2f\x72\x6f\x6f\x74\x2f\x72\x70\x6d\x62\
\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\x65\x72\x6e\x65\x6c\x2d\x35\
\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x5f\x31\
\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\
\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\x34\x2f\x74\x6f\x6f\x6c\x73\
\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\x66\x74\x65\x73\x74\x73\x2f\
\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x74\x65\x73\x74\x5f\x72\x69\x6e\x67\
\x62\x75\x66\x5f\x6d\x75\x6c\x74\x69\x2e\x63\0\x09\x69\x6e\x74\x20\x63\x75\x72\
\x5f\x70\x69\x64\x20\x3d\x20\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\
\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\x28\x29\x20\x3e\x3e\x20\x33\
\x32\x3b\0\x09\x69\x66\x20\x28\x63\x75\x72\x5f\x70\x69\x64\x20\x21\x3d\x20\x70\
\x69\x64\x29\0\x09\x72\x62\x20\x3d\x20\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\x6f\
\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\x28\x26\x72\x69\x6e\x67\x62\x75\x66\x5f\
\x61\x72\x72\x2c\x20\x26\x74\x61\x72\x67\x65\x74\x5f\x72\x69\x6e\x67\x29\x3b\0\
\x09\x69\x66\x20\x28\x21\x72\x62\x29\x20\x7b\0\x09\x09\x73\x6b\x69\x70\x70\x65\
\x64\x20\x2b\x3d\x20\x31\x3b\0\x09\x73\x61\x6d\x70\x6c\x65\x20\x3d\x20\x62\x70\
\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\x65\x73\x65\x72\x76\x65\x28\x72\
\x62\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x2a\x73\x61\x6d\x70\x6c\x65\x29\x2c\
\x20\x30\x29\x3b\0\x09\x69\x66\x20\x28\x21\x73\x61\x6d\x70\x6c\x65\x29\x20\x7b\
\0\x09\x09\x64\x72\x6f\x70\x70\x65\x64\x20\x2b\x3d\x20\x31\x3b\0\x09\x73\x61\
\x6d\x70\x6c\x65\x2d\x3e\x70\x69\x64\x20\x3d\x20\x70\x69\x64\x3b\0\x09\x62\x70\
\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\x28\
\x73\x61\x6d\x70\x6c\x65\x2d\x3e\x63\x6f\x6d\x6d\x2c\x20\x73\x69\x7a\x65\x6f\
\x66\x28\x73\x61\x6d\x70\x6c\x65\x2d\x3e\x63\x6f\x6d\x6d\x29\x29\x3b\0\x09\x73\
\x61\x6d\x70\x6c\x65\x2d\x3e\x76\x61\x6c\x75\x65\x20\x3d\x20\x76\x61\x6c\x75\
\x65\x3b\0\x09\x73\x61\x6d\x70\x6c\x65\x2d\x3e\x73\x65\x71\x20\x3d\x20\x74\x6f\
\x74\x61\x6c\x3b\0\x09\x74\x6f\x74\x61\x6c\x20\x2b\x3d\x20\x31\x3b\0\x09\x62\
\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x73\x75\x62\x6d\x69\x74\x28\x73\
\x61\x6d\x70\x6c\x65\x2c\x20\x30\x29\x3b\0\x7d\0\x6c\x69\x63\x65\x6e\x73\x65\0\
\x2e\x6d\x61\x70\x73\0\x2e\x62\x73\x73\0\x74\x70\x2f\x73\x79\x73\x63\x61\x6c\
\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x67\x65\x74\x70\x67\x69\
\x64\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\x6c\
\x01\0\0\x80\x01\0\0\0\0\0\0\x08\0\0\0\xf3\x02\0\0\x01\0\0\0\0\0\0\0\x19\0\0\0\
\x10\0\0\0\xf3\x02\0\0\x16\0\0\0\0\0\0\0\xbc\0\0\0\x44\x01\0\0\x10\xe4\0\0\x10\
\0\0\0\xbc\0\0\0\x44\x01\0\0\x2b\xe4\0\0\x18\0\0\0\xbc\0\0\0\x75\x01\0\0\x11\
\xf8\0\0\x30\0\0\0\xbc\0\0\0\x75\x01\0\0\x06\xf8\0\0\x38\0\0\0\xbc\0\0\0\x8a\
\x01\0\0\x07\x04\x01\0\x60\0\0\0\xbc\0\0\0\xc1\x01\0\0\x06\x08\x01\0\x68\0\0\0\
\xbc\0\0\0\xcd\x01\0\0\x0b\x0c\x01\0\x88\0\0\0\xbc\0\0\0\xdd\x01\0\0\x0b\x1c\
\x01\0\xb0\0\0\0\xbc\0\0\0\x14\x02\0\0\x06\x20\x01\0\xb8\0\0\0\xbc\0\0\0\x24\
\x02\0\0\x0b\x24\x01\0\xc8\0\0\0\xbc\0\0\0\0\0\0\0\0\0\0\0\xf0\0\0\0\xbc\0\0\0\
\x34\x02\0\0\x10\x34\x01\0\x08\x01\0\0\xbc\0\0\0\x34\x02\0\0\x0e\x34\x01\0\x10\
\x01\0\0\xbc\0\0\0\x48\x02\0\0\x1f\x38\x01\0\x20\x01\0\0\xbc\0\0\0\x48\x02\0\0\
\x02\x38\x01\0\x30\x01\0\0\xbc\0\0\0\x83\x02\0\0\x12\x3c\x01\0\x48\x01\0\0\xbc\
\0\0\0\x83\x02\0\0\x10\x3c\x01\0\x50\x01\0\0\xbc\0\0\0\x9b\x02\0\0\x10\x44\x01\
\0\x68\x01\0\0\xbc\0\0\0\x9b\x02\0\0\x0e\x44\x01\0\x70\x01\0\0\xbc\0\0\0\xb1\
\x02\0\0\x08\x48\x01\0\x80\x01\0\0\xbc\0\0\0\xbe\x02\0\0\x02\x50\x01\0\x98\x01\
\0\0\xbc\0\0\0\xde\x02\0\0\x01\x5c\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\
\0\0\0\x1a\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\x01\0\0\0\0\0\0\xc8\
\x01\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x11\0\0\
\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x28\x03\0\0\0\0\0\0\xa8\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2f\0\0\0\x01\0\0\0\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\x04\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x37\0\0\0\x01\0\0\0\x03\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xd8\x04\0\0\0\0\0\0\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3d\0\0\0\x08\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x38\x05\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xe0\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x05\
\0\0\0\0\0\0\x80\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\
\0\0\0\0\x02\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\x05\0\0\0\
\0\0\0\x30\0\0\0\0\0\0\0\x02\0\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\
\0\x0c\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe8\x05\0\0\0\0\0\0\
\x79\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x11\x01\
\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x0c\0\0\0\0\0\0\xa0\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __TEST_RINGBUF_MULTI_SKEL_H__ */
