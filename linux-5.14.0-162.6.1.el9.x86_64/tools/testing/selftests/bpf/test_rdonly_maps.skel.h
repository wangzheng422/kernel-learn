/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TEST_RDONLY_MAPS_SKEL_H__
#define __TEST_RDONLY_MAPS_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct test_rdonly_maps {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *rodata;
		struct bpf_map *bss;
	} maps;
	struct {
		struct bpf_program *skip_loop;
		struct bpf_program *part_loop;
		struct bpf_program *full_loop;
	} progs;
	struct {
		struct bpf_link *skip_loop;
		struct bpf_link *part_loop;
		struct bpf_link *full_loop;
	} links;
	struct test_rdonly_maps__rodata {
		struct {
			unsigned int a[4];
			char _y;
		} rdonly_values;
	} *rodata;
	struct test_rdonly_maps__bss {
		struct {
			unsigned int did_run;
			unsigned int iters;
			unsigned int sum;
		} res;
	} *bss;
};

static void
test_rdonly_maps__destroy(struct test_rdonly_maps *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
test_rdonly_maps__create_skeleton(struct test_rdonly_maps *obj);

static inline struct test_rdonly_maps *
test_rdonly_maps__open_opts(const struct bpf_object_open_opts *opts)
{
	struct test_rdonly_maps *obj;
	int err;

	obj = (struct test_rdonly_maps *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = test_rdonly_maps__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	test_rdonly_maps__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct test_rdonly_maps *
test_rdonly_maps__open(void)
{
	return test_rdonly_maps__open_opts(NULL);
}

static inline int
test_rdonly_maps__load(struct test_rdonly_maps *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct test_rdonly_maps *
test_rdonly_maps__open_and_load(void)
{
	struct test_rdonly_maps *obj;
	int err;

	obj = test_rdonly_maps__open();
	if (!obj)
		return NULL;
	err = test_rdonly_maps__load(obj);
	if (err) {
		test_rdonly_maps__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
test_rdonly_maps__attach(struct test_rdonly_maps *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
test_rdonly_maps__detach(struct test_rdonly_maps *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *test_rdonly_maps__elf_bytes(size_t *sz);

static inline int
test_rdonly_maps__create_skeleton(struct test_rdonly_maps *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		goto err;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "test_rdonly_maps";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps)
		goto err;

	s->maps[0].name = "test_rdo.rodata";
	s->maps[0].map = &obj->maps.rodata;
	s->maps[0].mmaped = (void **)&obj->rodata;

	s->maps[1].name = "test_rdo.bss";
	s->maps[1].map = &obj->maps.bss;
	s->maps[1].mmaped = (void **)&obj->bss;

	/* programs */
	s->prog_cnt = 3;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "skip_loop";
	s->progs[0].prog = &obj->progs.skip_loop;
	s->progs[0].link = &obj->links.skip_loop;

	s->progs[1].name = "part_loop";
	s->progs[1].prog = &obj->progs.part_loop;
	s->progs[1].link = &obj->links.part_loop;

	s->progs[2].name = "full_loop";
	s->progs[2].prog = &obj->progs.full_loop;
	s->progs[2].link = &obj->links.full_loop;

	s->data = (void *)test_rdonly_maps__elf_bytes(&s->data_sz);

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -ENOMEM;
}

static inline const void *test_rdonly_maps__elf_bytes(size_t *sz)
{
	*sz = 4976;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xf0\x0f\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0e\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x72\x61\
\x77\x5f\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\
\x74\x65\x72\x3a\x73\x6b\x69\x70\x5f\x6c\x6f\x6f\x70\0\x72\x61\x77\x5f\x74\x72\
\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\
\x70\x61\x72\x74\x5f\x6c\x6f\x6f\x70\0\x72\x61\x77\x5f\x74\x72\x61\x63\x65\x70\
\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\x66\x75\x6c\x6c\
\x5f\x6c\x6f\x6f\x70\0\x2e\x72\x6f\x64\x61\x74\x61\0\x2e\x62\x73\x73\0\x6c\x69\
\x63\x65\x6e\x73\x65\0\x74\x65\x73\x74\x5f\x72\x64\x6f\x6e\x6c\x79\x5f\x6d\x61\
\x70\x73\x2e\x63\0\x4c\x42\x42\x30\x5f\x33\0\x4c\x42\x42\x30\x5f\x32\0\x4c\x42\
\x42\x31\x5f\x33\0\x4c\x42\x42\x31\x5f\x32\0\x73\x6b\x69\x70\x5f\x6c\x6f\x6f\
\x70\0\x72\x64\x6f\x6e\x6c\x79\x5f\x76\x61\x6c\x75\x65\x73\0\x72\x65\x73\0\x70\
\x61\x72\x74\x5f\x6c\x6f\x6f\x70\0\x66\x75\x6c\x6c\x5f\x6c\x6f\x6f\x70\0\x5f\
\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x72\x61\x77\x5f\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\x73\x6b\
\x69\x70\x5f\x6c\x6f\x6f\x70\0\x2e\x72\x65\x6c\x72\x61\x77\x5f\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\x70\x61\
\x72\x74\x5f\x6c\x6f\x6f\x70\0\x2e\x72\x65\x6c\x72\x61\x77\x5f\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\x66\x75\
\x6c\x6c\x5f\x6c\x6f\x6f\x70\0\x2e\x42\x54\x46\0\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x8f\0\0\0\
\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xa2\0\0\0\0\0\x03\0\xb8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa9\
\0\0\0\0\0\x03\0\x58\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x04\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\xb0\0\0\0\0\0\x04\0\xa8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xb7\0\0\0\0\0\x04\0\x50\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x05\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbe\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xf8\0\0\0\0\
\0\0\0\xc8\0\0\0\x11\0\x06\0\0\0\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\xd6\0\0\0\x11\0\
\x07\0\0\0\0\0\0\0\0\0\x0c\0\0\0\0\0\0\0\xda\0\0\0\x12\0\x04\0\0\0\0\0\0\0\0\0\
\xe8\0\0\0\0\0\0\0\xe4\0\0\0\x12\0\x05\0\0\0\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\
\xee\0\0\0\x11\0\x08\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x7b\x1a\xf8\xff\0\0\0\0\xb4\x01\0\0\0\0\0\0\x79\xa2\xf8\xff\0\0\
\0\0\x61\x23\0\0\0\0\0\0\x54\x03\0\0\x01\0\0\0\xb4\x02\0\0\0\0\0\0\x16\x03\x0e\
\0\0\0\0\0\xb4\x03\0\0\0\0\0\0\xb4\x01\0\0\0\0\0\0\x79\xa2\xf8\xff\0\0\0\0\x61\
\x22\0\0\0\0\0\0\x79\xa4\xf8\xff\0\0\0\0\x07\x04\0\0\x04\0\0\0\x7b\x4a\xf8\xff\
\0\0\0\0\x0c\x32\0\0\0\0\0\0\x04\x01\0\0\x01\0\0\0\x79\xa3\xf8\xff\0\0\0\0\x61\
\x34\0\0\0\0\0\0\x54\x04\0\0\x01\0\0\0\xbc\x23\0\0\0\0\0\0\x56\x04\xf4\xff\0\0\
\0\0\x18\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x63\x23\x08\0\0\0\0\0\x63\x13\x04\0\0\
\0\0\0\xb4\x01\0\0\x01\0\0\0\x63\x13\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\
\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7b\x1a\xf8\xff\0\0\0\0\xb4\x01\0\0\
\0\0\0\0\x79\xa2\xf8\xff\0\0\0\0\x61\x23\0\0\0\0\0\0\xb4\x02\0\0\0\0\0\0\x26\
\x03\x0d\0\x04\0\0\0\xb4\x03\0\0\0\0\0\0\xb4\x01\0\0\0\0\0\0\x79\xa2\xf8\xff\0\
\0\0\0\x61\x22\0\0\0\0\0\0\x79\xa4\xf8\xff\0\0\0\0\x07\x04\0\0\x04\0\0\0\x7b\
\x4a\xf8\xff\0\0\0\0\x0c\x32\0\0\0\0\0\0\x04\x01\0\0\x01\0\0\0\x79\xa3\xf8\xff\
\0\0\0\0\x61\x34\0\0\0\0\0\0\xbc\x23\0\0\0\0\0\0\xa6\x04\xf5\xff\x05\0\0\0\x18\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x63\x23\x08\0\0\0\0\0\x63\x13\x04\0\0\0\0\0\
\xb4\x01\0\0\x01\0\0\0\x63\x13\0\0\0\0\0\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\
\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7b\x1a\xf8\xff\0\0\0\0\x79\xa1\xf8\xff\0\
\0\0\0\x61\x12\0\0\0\0\0\0\x79\xa1\xf8\xff\0\0\0\0\x07\x01\0\0\x04\0\0\0\x7b\
\x1a\xf8\xff\0\0\0\0\x79\xa1\xf8\xff\0\0\0\0\x61\x11\0\0\0\0\0\0\x79\xa3\xf8\
\xff\0\0\0\0\x07\x03\0\0\x04\0\0\0\x7b\x3a\xf8\xff\0\0\0\0\x0c\x21\0\0\0\0\0\0\
\x79\xa2\xf8\xff\0\0\0\0\x61\x22\0\0\0\0\0\0\x79\xa3\xf8\xff\0\0\0\0\x07\x03\0\
\0\x04\0\0\0\x7b\x3a\xf8\xff\0\0\0\0\x79\xa3\xf8\xff\0\0\0\0\x61\x33\0\0\0\0\0\
\0\x18\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb4\x05\0\0\x04\0\0\0\x63\x54\x04\0\0\0\
\0\0\xb4\x05\0\0\x01\0\0\0\x63\x54\0\0\0\0\0\0\x0c\x12\0\0\0\0\0\0\x0c\x23\0\0\
\0\0\0\0\x63\x34\x08\0\0\0\0\0\x79\xa1\xf8\xff\0\0\0\0\x07\x01\0\0\x04\0\0\0\
\x7b\x1a\xf8\xff\0\0\0\0\xb4\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\
\0\x04\0\0\0\x05\0\0\0\0\0\0\0\x47\x50\x4c\0\0\0\0\0\0\0\0\0\x01\0\0\0\x0a\0\0\
\0\xb8\0\0\0\0\0\0\0\x01\0\0\0\x0b\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x0a\0\0\0\
\xa8\0\0\0\0\0\0\0\x01\0\0\0\x0b\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x0a\0\0\0\xa8\
\0\0\0\0\0\0\0\x01\0\0\0\x0b\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\xa4\x02\0\0\
\xa4\x02\0\0\xa8\x02\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\x15\0\0\x04\xa8\
\0\0\0\x09\0\0\0\x03\0\0\0\0\0\0\0\x0d\0\0\0\x03\0\0\0\x40\0\0\0\x11\0\0\0\x03\
\0\0\0\x80\0\0\0\x15\0\0\0\x03\0\0\0\xc0\0\0\0\x19\0\0\0\x03\0\0\0\0\x01\0\0\
\x1d\0\0\0\x03\0\0\0\x40\x01\0\0\x21\0\0\0\x03\0\0\0\x80\x01\0\0\x25\0\0\0\x03\
\0\0\0\xc0\x01\0\0\x29\0\0\0\x03\0\0\0\0\x02\0\0\x2c\0\0\0\x03\0\0\0\x40\x02\0\
\0\x2f\0\0\0\x03\0\0\0\x80\x02\0\0\x33\0\0\0\x03\0\0\0\xc0\x02\0\0\x37\0\0\0\
\x03\0\0\0\0\x03\0\0\x3b\0\0\0\x03\0\0\0\x40\x03\0\0\x3f\0\0\0\x03\0\0\0\x80\
\x03\0\0\x43\0\0\0\x03\0\0\0\xc0\x03\0\0\x4c\0\0\0\x03\0\0\0\0\x04\0\0\x50\0\0\
\0\x03\0\0\0\x40\x04\0\0\x53\0\0\0\x03\0\0\0\x80\x04\0\0\x5a\0\0\0\x03\0\0\0\
\xc0\x04\0\0\x5e\0\0\0\x03\0\0\0\0\x05\0\0\x61\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\
\0\0\0\0\0\0\x01\0\0\x0d\x05\0\0\0\x6f\0\0\0\x01\0\0\0\x73\0\0\0\0\0\0\x01\x04\
\0\0\0\x20\0\0\x01\x77\0\0\0\x01\0\0\x0c\x04\0\0\0\x81\0\0\0\x01\0\0\x0c\x04\0\
\0\0\x8b\0\0\0\x01\0\0\x0c\x04\0\0\0\0\0\0\0\0\0\0\x0a\x0a\0\0\0\0\0\0\0\x02\0\
\0\x04\x14\0\0\0\x95\0\0\0\x0c\0\0\0\0\0\0\0\x97\0\0\0\x0e\0\0\0\x80\0\0\0\x9a\
\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x0b\0\0\0\x0d\0\
\0\0\x04\0\0\0\xa7\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\xbb\0\0\0\0\0\0\x01\x01\
\0\0\0\x08\0\0\x01\xc0\0\0\0\0\0\0\x0e\x09\0\0\0\x01\0\0\0\0\0\0\0\x03\0\0\x04\
\x0c\0\0\0\xce\0\0\0\x0b\0\0\0\0\0\0\0\xd6\0\0\0\x0b\0\0\0\x20\0\0\0\xdc\0\0\0\
\x0b\0\0\0\x40\0\0\0\xe0\0\0\0\0\0\0\x0e\x10\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\0\x0e\0\0\0\x0d\0\0\0\x04\0\0\0\xe4\0\0\0\0\0\0\x0e\x12\0\0\0\x01\0\0\0\
\x2a\x02\0\0\x01\0\0\x0f\x14\0\0\0\x0f\0\0\0\0\0\0\0\x14\0\0\0\x32\x02\0\0\x01\
\0\0\x0f\x0c\0\0\0\x11\0\0\0\0\0\0\0\x0c\0\0\0\x37\x02\0\0\x01\0\0\x0f\x04\0\0\
\0\x13\0\0\0\0\0\0\0\x04\0\0\0\0\x70\x74\x5f\x72\x65\x67\x73\0\x72\x31\x35\0\
\x72\x31\x34\0\x72\x31\x33\0\x72\x31\x32\0\x72\x62\x70\0\x72\x62\x78\0\x72\x31\
\x31\0\x72\x31\x30\0\x72\x39\0\x72\x38\0\x72\x61\x78\0\x72\x63\x78\0\x72\x64\
\x78\0\x72\x73\x69\0\x72\x64\x69\0\x6f\x72\x69\x67\x5f\x72\x61\x78\0\x72\x69\
\x70\0\x63\x73\0\x65\x66\x6c\x61\x67\x73\0\x72\x73\x70\0\x73\x73\0\x75\x6e\x73\
\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x63\x74\x78\0\x69\x6e\x74\0\x73\x6b\
\x69\x70\x5f\x6c\x6f\x6f\x70\0\x70\x61\x72\x74\x5f\x6c\x6f\x6f\x70\0\x66\x75\
\x6c\x6c\x5f\x6c\x6f\x6f\x70\0\x61\0\x5f\x79\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\
\x50\x45\x5f\x5f\0\x63\x68\x61\x72\0\x72\x64\x6f\x6e\x6c\x79\x5f\x76\x61\x6c\
\x75\x65\x73\0\x64\x69\x64\x5f\x72\x75\x6e\0\x69\x74\x65\x72\x73\0\x73\x75\x6d\
\0\x72\x65\x73\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2f\x72\x6f\x6f\x74\x2f\x72\
\x70\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\x44\x2f\x6b\x65\x72\x6e\x65\
\x6c\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\
\x39\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\
\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\x36\x5f\x36\x34\x2f\x74\x6f\
\x6f\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\x73\x65\x6c\x66\x74\x65\x73\
\x74\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\x2f\x74\x65\x73\x74\x5f\x72\
\x64\x6f\x6e\x6c\x79\x5f\x6d\x61\x70\x73\x2e\x63\0\x09\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x2a\x20\x76\x6f\x6c\x61\x74\x69\x6c\x65\x20\x70\x20\x3d\x20\x28\
\x76\x6f\x69\x64\x20\x2a\x29\x26\x72\x64\x6f\x6e\x6c\x79\x5f\x76\x61\x6c\x75\
\x65\x73\x2e\x61\x3b\0\x09\x77\x68\x69\x6c\x65\x20\x28\x2a\x70\x20\x26\x20\x31\
\x29\x20\x7b\0\x09\x09\x73\x75\x6d\x20\x2b\x3d\x20\x2a\x70\x3b\0\x09\x09\x70\
\x2b\x2b\x3b\0\x09\x09\x69\x74\x65\x72\x73\x2b\x2b\x3b\0\x09\x72\x65\x73\x2e\
\x64\x69\x64\x5f\x72\x75\x6e\x20\x3d\x20\x31\x3b\0\x09\x72\x65\x73\x2e\x73\x75\
\x6d\x20\x3d\x20\x73\x75\x6d\x3b\0\x09\x72\x65\x73\x2e\x69\x74\x65\x72\x73\x20\
\x3d\x20\x69\x74\x65\x72\x73\x3b\0\x09\x72\x65\x74\x75\x72\x6e\x20\x30\x3b\0\
\x09\x77\x68\x69\x6c\x65\x20\x28\x2a\x70\x20\x3c\x20\x35\x29\x20\x7b\0\x2e\x72\
\x6f\x64\x61\x74\x61\0\x2e\x62\x73\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\x72\x61\
\x77\x5f\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\
\x74\x65\x72\x3a\x73\x6b\x69\x70\x5f\x6c\x6f\x6f\x70\0\x72\x61\x77\x5f\x74\x72\
\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\
\x70\x61\x72\x74\x5f\x6c\x6f\x6f\x70\0\x72\x61\x77\x5f\x74\x72\x61\x63\x65\x70\
\x6f\x69\x6e\x74\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x3a\x66\x75\x6c\x6c\
\x5f\x6c\x6f\x6f\x70\0\0\0\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x34\0\0\0\x34\0\
\0\0\x9c\x03\0\0\xd0\x03\0\0\0\0\0\0\x08\0\0\0\x3f\x02\0\0\x01\0\0\0\0\0\0\0\
\x06\0\0\0\x62\x02\0\0\x01\0\0\0\0\0\0\0\x07\0\0\0\x85\x02\0\0\x01\0\0\0\0\0\0\
\0\x08\0\0\0\x10\0\0\0\x3f\x02\0\0\x13\0\0\0\0\0\0\0\xed\0\0\0\x73\x01\0\0\x16\
\x70\0\0\x20\0\0\0\xed\0\0\0\xa6\x01\0\0\x0a\x80\0\0\x28\0\0\0\xed\0\0\0\xa6\
\x01\0\0\x09\x80\0\0\x30\0\0\0\xed\0\0\0\xa6\x01\0\0\x0c\x80\0\0\x40\0\0\0\xed\
\0\0\0\xa6\x01\0\0\x02\x80\0\0\x58\0\0\0\xed\0\0\0\xb8\x01\0\0\x0b\x88\0\0\x60\
\0\0\0\xed\0\0\0\xb8\x01\0\0\x0a\x88\0\0\x68\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\
\x8c\0\0\x80\0\0\0\xed\0\0\0\xb8\x01\0\0\x07\x88\0\0\x88\0\0\0\xed\0\0\0\xcc\
\x01\0\0\x08\x84\0\0\x90\0\0\0\xed\0\0\0\xa6\x01\0\0\x0a\x80\0\0\x98\0\0\0\xed\
\0\0\0\xa6\x01\0\0\x09\x80\0\0\xa0\0\0\0\xed\0\0\0\xa6\x01\0\0\x0c\x80\0\0\xb0\
\0\0\0\xed\0\0\0\xa6\x01\0\0\x02\x80\0\0\xb8\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\
\x94\0\0\xc8\0\0\0\xed\0\0\0\xe9\x01\0\0\x0a\x9c\0\0\xd0\0\0\0\xed\0\0\0\xf9\
\x01\0\0\x0c\x98\0\0\xe0\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\x94\0\0\xe8\0\0\0\xed\
\0\0\0\x0d\x02\0\0\x02\xa0\0\0\x62\x02\0\0\x11\0\0\0\0\0\0\0\xed\0\0\0\x73\x01\
\0\0\x16\xbc\0\0\x20\0\0\0\xed\0\0\0\x18\x02\0\0\x0a\xcc\0\0\x28\0\0\0\xed\0\0\
\0\x18\x02\0\0\x09\xcc\0\0\x38\0\0\0\xed\0\0\0\x18\x02\0\0\x02\xcc\0\0\x50\0\0\
\0\xed\0\0\0\xb8\x01\0\0\x0b\xd4\0\0\x58\0\0\0\xed\0\0\0\xb8\x01\0\0\x0a\xd4\0\
\0\x60\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\xd8\0\0\x78\0\0\0\xed\0\0\0\xb8\x01\0\0\
\x07\xd4\0\0\x80\0\0\0\xed\0\0\0\xcc\x01\0\0\x08\xd0\0\0\x88\0\0\0\xed\0\0\0\
\x18\x02\0\0\x0a\xcc\0\0\x90\0\0\0\xed\0\0\0\x18\x02\0\0\x09\xcc\0\0\xa0\0\0\0\
\xed\0\0\0\x18\x02\0\0\x02\xcc\0\0\xa8\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\xe0\0\0\
\xb8\0\0\0\xed\0\0\0\xe9\x01\0\0\x0a\xe8\0\0\xc0\0\0\0\xed\0\0\0\xf9\x01\0\0\
\x0c\xe4\0\0\xd0\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\xe0\0\0\xd8\0\0\0\xed\0\0\0\
\x0d\x02\0\0\x02\xec\0\0\x85\x02\0\0\x14\0\0\0\0\0\0\0\xed\0\0\0\x73\x01\0\0\
\x16\x08\x01\0\x18\0\0\0\xed\0\0\0\xb8\x01\0\0\x0b\x24\x01\0\x20\0\0\0\xed\0\0\
\0\xb8\x01\0\0\x0a\x24\x01\0\x28\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\x28\x01\0\x40\
\0\0\0\xed\0\0\0\xb8\x01\0\0\x0b\x24\x01\0\x48\0\0\0\xed\0\0\0\xb8\x01\0\0\x0a\
\x24\x01\0\x50\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\x28\x01\0\x68\0\0\0\xed\0\0\0\
\xb8\x01\0\0\x07\x24\x01\0\x70\0\0\0\xed\0\0\0\xb8\x01\0\0\x0b\x24\x01\0\x78\0\
\0\0\xed\0\0\0\xb8\x01\0\0\x0a\x24\x01\0\x80\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\
\x28\x01\0\x98\0\0\0\xed\0\0\0\xb8\x01\0\0\x0b\x24\x01\0\xa0\0\0\0\xed\0\0\0\
\xb8\x01\0\0\x0a\x24\x01\0\xa8\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\x34\x01\0\xc0\0\
\0\0\xed\0\0\0\xf9\x01\0\0\x0c\x38\x01\0\xd0\0\0\0\xed\0\0\0\xd7\x01\0\0\x0e\
\x34\x01\0\xd8\0\0\0\xed\0\0\0\xb8\x01\0\0\x07\x24\x01\0\xe8\0\0\0\xed\0\0\0\
\xe9\x01\0\0\x0a\x3c\x01\0\xf0\0\0\0\xed\0\0\0\xc5\x01\0\0\x04\x28\x01\0\x08\
\x01\0\0\xed\0\0\0\x0d\x02\0\0\x02\x40\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\
\0\0\0\0\0\x7a\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc0\x01\0\0\0\0\0\0\x68\
\x01\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x11\0\0\
\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x28\x03\0\0\0\0\0\0\xf8\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x34\0\0\0\x01\0\0\0\
\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x04\0\0\0\0\0\0\xe8\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x57\0\0\0\x01\0\0\0\x06\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x08\x05\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7a\0\0\0\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x20\x06\0\0\0\0\0\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x82\0\0\0\x08\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x34\
\x06\0\0\0\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x87\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x34\x06\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf7\0\0\
\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\x06\0\0\0\0\0\0\x20\0\0\0\0\
\0\0\0\x02\0\0\0\x03\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1e\x01\0\0\x09\
\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x06\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\
\x02\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x45\x01\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\x06\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x02\0\
\0\0\x05\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x6c\x01\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x06\0\0\0\0\0\0\x64\x05\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x71\x01\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x0c\0\0\0\0\0\0\xf0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0";
}

#endif /* __TEST_RDONLY_MAPS_SKEL_H__ */
