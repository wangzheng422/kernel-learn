/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */
/* THIS FILE IS AUTOGENERATED! */
#ifndef __KFUNC_CALL_TEST_LSKEL_SKEL_H__
#define __KFUNC_CALL_TEST_LSKEL_SKEL_H__

#include <stdlib.h>
#include <bpf/bpf.h>
#include <bpf/skel_internal.h>

struct kfunc_call_test_lskel {
	struct bpf_loader_ctx ctx;
	struct {
		struct bpf_prog_desc kfunc_call_test2;
		struct bpf_prog_desc kfunc_call_test1;
	} progs;
	struct {
		int kfunc_call_test2_fd;
		int kfunc_call_test1_fd;
	} links;
};

static inline int
kfunc_call_test_lskel__kfunc_call_test2__attach(struct kfunc_call_test_lskel *skel)
{
	int prog_fd = skel->progs.kfunc_call_test2.prog_fd;
	int fd = ((void)prog_fd, 0); /* auto-attach not supported */

	if (fd > 0)
		skel->links.kfunc_call_test2_fd = fd;
	return fd;
}

static inline int
kfunc_call_test_lskel__kfunc_call_test1__attach(struct kfunc_call_test_lskel *skel)
{
	int prog_fd = skel->progs.kfunc_call_test1.prog_fd;
	int fd = ((void)prog_fd, 0); /* auto-attach not supported */

	if (fd > 0)
		skel->links.kfunc_call_test1_fd = fd;
	return fd;
}

static inline int
kfunc_call_test_lskel__attach(struct kfunc_call_test_lskel *skel)
{
	int ret = 0;

	ret = ret < 0 ? ret : kfunc_call_test_lskel__kfunc_call_test2__attach(skel);
	ret = ret < 0 ? ret : kfunc_call_test_lskel__kfunc_call_test1__attach(skel);
	return ret < 0 ? ret : 0;
}

static inline void
kfunc_call_test_lskel__detach(struct kfunc_call_test_lskel *skel)
{
	skel_closenz(skel->links.kfunc_call_test2_fd);
	skel_closenz(skel->links.kfunc_call_test1_fd);
}
static void
kfunc_call_test_lskel__destroy(struct kfunc_call_test_lskel *skel)
{
	if (!skel)
		return;
	kfunc_call_test_lskel__detach(skel);
	skel_closenz(skel->progs.kfunc_call_test2.prog_fd);
	skel_closenz(skel->progs.kfunc_call_test1.prog_fd);
	free(skel);
}
static inline struct kfunc_call_test_lskel *
kfunc_call_test_lskel__open(void)
{
	struct kfunc_call_test_lskel *skel;

	skel = calloc(sizeof(*skel), 1);
	if (!skel)
		goto cleanup;
	skel->ctx.sz = (void *)&skel->links - (void *)skel;
	return skel;
cleanup:
	kfunc_call_test_lskel__destroy(skel);
	return NULL;
}

static inline int
kfunc_call_test_lskel__load(struct kfunc_call_test_lskel *skel)
{
	struct bpf_load_and_run_opts opts = {};
	int err;

	opts.ctx = (struct bpf_loader_ctx *)skel;
	opts.data_sz = 4408;
	opts.data = (void *)"\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\
\x18\0\0\0\0\0\0\0\x48\x04\0\0\x48\x04\0\0\x76\x04\0\0\0\0\0\0\0\0\0\x02\x02\0\
\0\0\x01\0\0\0\x21\0\0\x04\xc0\0\0\0\x0b\0\0\0\x03\0\0\0\0\0\0\0\x0f\0\0\0\x03\
\0\0\0\x20\0\0\0\x18\0\0\0\x03\0\0\0\x40\0\0\0\x1d\0\0\0\x03\0\0\0\x60\0\0\0\
\x2b\0\0\0\x03\0\0\0\x80\0\0\0\x34\0\0\0\x03\0\0\0\xa0\0\0\0\x41\0\0\0\x03\0\0\
\0\xc0\0\0\0\x4a\0\0\0\x03\0\0\0\xe0\0\0\0\x55\0\0\0\x03\0\0\0\0\x01\0\0\x5e\0\
\0\0\x03\0\0\0\x20\x01\0\0\x6e\0\0\0\x03\0\0\0\x40\x01\0\0\x76\0\0\0\x03\0\0\0\
\x60\x01\0\0\x7f\0\0\0\x05\0\0\0\x80\x01\0\0\x82\0\0\0\x03\0\0\0\x20\x02\0\0\
\x87\0\0\0\x03\0\0\0\x40\x02\0\0\x92\0\0\0\x03\0\0\0\x60\x02\0\0\x97\0\0\0\x03\
\0\0\0\x80\x02\0\0\xa0\0\0\0\x03\0\0\0\xa0\x02\0\0\xa8\0\0\0\x03\0\0\0\xc0\x02\
\0\0\xaf\0\0\0\x03\0\0\0\xe0\x02\0\0\xba\0\0\0\x03\0\0\0\0\x03\0\0\xc4\0\0\0\
\x07\0\0\0\x20\x03\0\0\xcf\0\0\0\x07\0\0\0\xa0\x03\0\0\xd9\0\0\0\x03\0\0\0\x20\
\x04\0\0\xe5\0\0\0\x03\0\0\0\x40\x04\0\0\xf0\0\0\0\x03\0\0\0\x60\x04\0\0\0\0\0\
\0\x08\0\0\0\x80\x04\0\0\xfa\0\0\0\x0a\0\0\0\xc0\x04\0\0\x01\x01\0\0\x03\0\0\0\
\0\x05\0\0\x0a\x01\0\0\x03\0\0\0\x20\x05\0\0\0\0\0\0\x0c\0\0\0\x40\x05\0\0\x13\
\x01\0\0\x03\0\0\0\x80\x05\0\0\x1c\x01\0\0\x0a\0\0\0\xc0\x05\0\0\x25\x01\0\0\0\
\0\0\x08\x04\0\0\0\x2b\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x03\
\0\0\0\0\x03\0\0\0\x06\0\0\0\x05\0\0\0\x38\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\
\0\0\0\0\0\0\0\0\x03\0\0\0\0\x03\0\0\0\x06\0\0\0\x04\0\0\0\0\0\0\0\x01\0\0\x05\
\x08\0\0\0\x4c\x01\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x20\0\0\0\x56\x01\0\
\0\0\0\0\x08\x0b\0\0\0\x5c\x01\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\x01\0\
\0\x05\x08\0\0\0\x6f\x01\0\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x02\x21\0\0\0\0\0\
\0\0\x01\0\0\x0d\x0f\0\0\0\x72\x01\0\0\x01\0\0\0\x76\x01\0\0\0\0\0\x01\x04\0\0\
\0\x20\0\0\x01\x7a\x01\0\0\x01\0\0\x0c\x0e\0\0\0\0\0\0\0\x03\0\0\x0d\x0f\0\0\0\
\x6b\x04\0\0\x12\0\0\0\x6b\x04\0\0\x03\0\0\0\x6b\x04\0\0\x03\0\0\0\0\0\0\0\0\0\
\0\x02\x13\0\0\0\x8b\x01\0\0\x03\0\0\x04\x18\0\0\0\x90\x01\0\0\x14\0\0\0\0\0\0\
\0\x9c\x01\0\0\x18\0\0\0\x40\0\0\0\xab\x01\0\0\x03\0\0\0\x80\0\0\0\xbc\x01\0\0\
\x02\0\0\x04\x04\0\0\0\xc8\x01\0\0\x15\0\0\0\0\0\0\0\xd2\x01\0\0\x16\0\0\0\x10\
\0\0\0\xda\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\xe8\x01\0\0\0\0\0\x08\x17\0\0\
\0\xee\x01\0\0\0\0\0\x01\x02\0\0\0\x10\0\0\0\xfd\x01\0\0\0\0\0\x01\x08\0\0\0\
\x40\0\0\0\x0b\x02\0\0\x01\0\0\x0c\x11\0\0\0\x20\x02\0\0\x01\0\0\x0c\x0e\0\0\0\
\0\0\0\0\x05\0\0\x0d\x0a\0\0\0\x6b\x04\0\0\x12\0\0\0\x6b\x04\0\0\x03\0\0\0\x6b\
\x04\0\0\x0a\0\0\0\x6b\x04\0\0\x03\0\0\0\x6b\x04\0\0\x0a\0\0\0\x31\x02\0\0\x01\
\0\0\x0c\x1b\0\0\0\x46\x02\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\
\x03\0\0\0\0\x1d\0\0\0\x06\0\0\0\x04\0\0\0\x4b\x02\0\0\0\0\0\x0e\x1e\0\0\0\x01\
\0\0\0\x54\x02\0\0\0\0\0\x07\0\0\0\0\x62\x02\0\0\0\0\0\x07\0\0\0\0\x59\x04\0\0\
\x01\0\0\x0f\x04\0\0\0\x1f\0\0\0\0\0\0\0\x04\0\0\0\x61\x04\0\0\x02\0\0\x0f\x08\
\0\0\0\x24\0\0\0\0\0\0\0\x04\0\0\0\x24\0\0\0\x04\0\0\0\x04\0\0\0\x6b\x04\0\0\0\
\0\0\x0e\x04\0\0\0\x01\0\0\0\0\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\0\x6c\x65\
\x6e\0\x70\x6b\x74\x5f\x74\x79\x70\x65\0\x6d\x61\x72\x6b\0\x71\x75\x65\x75\x65\
\x5f\x6d\x61\x70\x70\x69\x6e\x67\0\x70\x72\x6f\x74\x6f\x63\x6f\x6c\0\x76\x6c\
\x61\x6e\x5f\x70\x72\x65\x73\x65\x6e\x74\0\x76\x6c\x61\x6e\x5f\x74\x63\x69\0\
\x76\x6c\x61\x6e\x5f\x70\x72\x6f\x74\x6f\0\x70\x72\x69\x6f\x72\x69\x74\x79\0\
\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x69\x66\x69\x6e\
\x64\x65\x78\0\x74\x63\x5f\x69\x6e\x64\x65\x78\0\x63\x62\0\x68\x61\x73\x68\0\
\x74\x63\x5f\x63\x6c\x61\x73\x73\x69\x64\0\x64\x61\x74\x61\0\x64\x61\x74\x61\
\x5f\x65\x6e\x64\0\x6e\x61\x70\x69\x5f\x69\x64\0\x66\x61\x6d\x69\x6c\x79\0\x72\
\x65\x6d\x6f\x74\x65\x5f\x69\x70\x34\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\x34\0\
\x72\x65\x6d\x6f\x74\x65\x5f\x69\x70\x36\0\x6c\x6f\x63\x61\x6c\x5f\x69\x70\x36\
\0\x72\x65\x6d\x6f\x74\x65\x5f\x70\x6f\x72\x74\0\x6c\x6f\x63\x61\x6c\x5f\x70\
\x6f\x72\x74\0\x64\x61\x74\x61\x5f\x6d\x65\x74\x61\0\x74\x73\x74\x61\x6d\x70\0\
\x77\x69\x72\x65\x5f\x6c\x65\x6e\0\x67\x73\x6f\x5f\x73\x65\x67\x73\0\x67\x73\
\x6f\x5f\x73\x69\x7a\x65\0\x68\x77\x74\x73\x74\x61\x6d\x70\0\x5f\x5f\x75\x33\
\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\
\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x66\x6c\x6f\x77\x5f\
\x6b\x65\x79\x73\0\x5f\x5f\x75\x36\x34\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\
\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x73\x6b\0\x73\x6b\x62\0\x69\x6e\x74\0\
\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\x32\0\x73\x6f\x63\
\x6b\0\x5f\x5f\x73\x6b\x5f\x63\x6f\x6d\x6d\x6f\x6e\0\x73\x6b\x5f\x70\x61\x63\
\x69\x6e\x67\x5f\x72\x61\x74\x65\0\x73\x6b\x5f\x70\x61\x63\x69\x6e\x67\x5f\x73\
\x74\x61\x74\x75\x73\0\x73\x6f\x63\x6b\x5f\x63\x6f\x6d\x6d\x6f\x6e\0\x73\x6b\
\x63\x5f\x73\x74\x61\x74\x65\0\x73\x6b\x63\x5f\x6e\x75\x6d\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x63\x68\x61\x72\0\x5f\x5f\x75\x31\x36\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\
\x6c\x6f\x6e\x67\0\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\
\x74\x65\x73\x74\x32\0\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\
\x74\x31\0\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\
\x73\x74\x31\0\x63\x68\x61\x72\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x62\x70\x66\
\x5f\x66\x6c\x6f\x77\x5f\x6b\x65\x79\x73\0\x62\x70\x66\x5f\x73\x6f\x63\x6b\0\
\x2f\x72\x6f\x6f\x74\x2f\x72\x70\x6d\x62\x75\x69\x6c\x64\x2f\x42\x55\x49\x4c\
\x44\x2f\x6b\x65\x72\x6e\x65\x6c\x2d\x35\x2e\x31\x34\x2e\x30\x2d\x31\x36\x32\
\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x5f\x31\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\
\x31\x34\x2e\x30\x2d\x31\x36\x32\x2e\x36\x2e\x31\x2e\x65\x6c\x39\x2e\x78\x38\
\x36\x5f\x36\x34\x2f\x74\x6f\x6f\x6c\x73\x2f\x74\x65\x73\x74\x69\x6e\x67\x2f\
\x73\x65\x6c\x66\x74\x65\x73\x74\x73\x2f\x62\x70\x66\x2f\x70\x72\x6f\x67\x73\
\x2f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\x2e\x63\0\x69\
\x6e\x74\x20\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\x32\
\x28\x73\x74\x72\x75\x63\x74\x20\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\x20\x2a\
\x73\x6b\x62\x29\0\x09\x73\x74\x72\x75\x63\x74\x20\x62\x70\x66\x5f\x73\x6f\x63\
\x6b\x20\x2a\x73\x6b\x20\x3d\x20\x73\x6b\x62\x2d\x3e\x73\x6b\x3b\0\x09\x69\x66\
\x20\x28\x21\x73\x6b\x29\0\x09\x73\x6b\x20\x3d\x20\x62\x70\x66\x5f\x73\x6b\x5f\
\x66\x75\x6c\x6c\x73\x6f\x63\x6b\x28\x73\x6b\x29\x3b\0\x09\x72\x65\x74\x75\x72\
\x6e\x20\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\
\x73\x74\x32\x28\x28\x73\x74\x72\x75\x63\x74\x20\x73\x6f\x63\x6b\x20\x2a\x29\
\x73\x6b\x2c\x20\x31\x2c\x20\x32\x29\x3b\0\x7d\0\x69\x6e\x74\x20\x6b\x66\x75\
\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\x31\x28\x73\x74\x72\x75\x63\
\x74\x20\x5f\x5f\x73\x6b\x5f\x62\x75\x66\x66\x20\x2a\x73\x6b\x62\x29\0\x09\x61\
\x20\x3d\x20\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\
\x65\x73\x74\x31\x28\x28\x73\x74\x72\x75\x63\x74\x20\x73\x6f\x63\x6b\x20\x2a\
\x29\x73\x6b\x2c\x20\x31\x2c\x20\x61\x20\x7c\x20\x32\x2c\x20\x33\x2c\x20\x61\
\x20\x7c\x20\x34\x29\x3b\0\x09\x72\x65\x74\x20\x3d\x20\x61\x20\x3e\x3e\x20\x33\
\x32\x3b\x20\x20\x20\x2f\x2a\x20\x72\x65\x74\x20\x73\x68\x6f\x75\x6c\x64\x20\
\x62\x65\x20\x32\x20\x2a\x2f\0\x09\x72\x65\x74\x20\x2b\x3d\x20\x28\x5f\x5f\x75\
\x33\x32\x29\x61\x3b\x20\x2f\x2a\x20\x72\x65\x74\x20\x73\x68\x6f\x75\x6c\x64\
\x20\x62\x65\x20\x31\x32\x20\x2a\x2f\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x6b\
\x73\x79\x6d\x73\0\x74\x63\0\x64\x75\x6d\x6d\x79\x5f\x6b\x73\x79\x6d\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd6\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x47\x50\x4c\0\
\0\0\0\0\xb4\x06\0\0\xff\xff\xff\xff\x79\x11\xa8\0\0\0\0\0\x15\x01\x07\0\0\0\0\
\0\x85\0\0\0\x5f\0\0\0\x15\0\x05\0\0\0\0\0\xbf\x01\0\0\0\0\0\0\xb4\x02\0\0\x01\
\0\0\0\xb4\x03\0\0\x02\0\0\0\x85\x20\0\0\0\0\0\0\xbc\x06\0\0\0\0\0\0\xbc\x60\0\
\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x6b\x02\0\0\xf0\x02\0\0\
\0\x30\0\0\x01\0\0\0\x6b\x02\0\0\x1c\x03\0\0\x1d\x38\0\0\x02\0\0\0\x6b\x02\0\0\
\x3c\x03\0\0\x06\x40\0\0\x03\0\0\0\x6b\x02\0\0\x46\x03\0\0\x07\x4c\0\0\x04\0\0\
\0\x6b\x02\0\0\x3c\x03\0\0\x06\x50\0\0\x05\0\0\0\x6b\x02\0\0\x61\x03\0\0\x09\
\x5c\0\0\x0a\0\0\0\x6b\x02\0\0\x98\x03\0\0\x01\x60\0\0\x03\0\0\0\x0c\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\
\x5f\x63\x61\x6c\x6c\x5f\x74\x65\x73\x74\x32\0\0\0\0\x47\x50\x4c\0\0\0\0\0\xb4\
\x06\0\0\xff\xff\xff\xff\x79\x11\xa8\0\0\0\0\0\x15\x01\x0d\0\0\0\0\0\x85\0\0\0\
\x5f\0\0\0\x15\0\x0b\0\0\0\0\0\xbf\x01\0\0\0\0\0\0\xb4\x02\0\0\x01\0\0\0\x18\
\x03\0\0\x02\0\0\0\0\0\0\0\x01\0\0\0\xb4\x04\0\0\x03\0\0\0\x18\x05\0\0\x04\0\0\
\0\0\0\0\0\x01\0\0\0\x85\x20\0\0\0\0\0\0\xbf\x06\0\0\0\0\0\0\x77\x06\0\0\x20\0\
\0\0\x0c\x06\0\0\0\0\0\0\xbc\x60\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\x1a\0\0\
\0\0\0\0\0\x6b\x02\0\0\x9a\x03\0\0\0\x6c\0\0\x01\0\0\0\x6b\x02\0\0\x1c\x03\0\0\
\x1d\x74\0\0\x02\0\0\0\x6b\x02\0\0\x3c\x03\0\0\x06\x84\0\0\x03\0\0\0\x6b\x02\0\
\0\x46\x03\0\0\x07\x90\0\0\x04\0\0\0\x6b\x02\0\0\x3c\x03\0\0\x06\x94\0\0\x05\0\
\0\0\x6b\x02\0\0\xc6\x03\0\0\x06\xa0\0\0\x0d\0\0\0\x6b\x02\0\0\x08\x04\0\0\x0a\
\xa4\0\0\x0f\0\0\0\x6b\x02\0\0\x30\x04\0\0\x06\xa8\0\0\x10\0\0\0\x6b\x02\0\0\
\x98\x03\0\0\x01\xb4\0\0\x03\0\0\0\x12\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x6b\x66\x75\x6e\x63\x5f\x63\x61\
\x6c\x6c\x5f\x74\x65\x73\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x62\x70\x66\x5f\x6b\x66\x75\x6e\x63\x5f\x63\x61\x6c\x6c\x5f\x74\x65\
\x73\x74\x31\0\0\0\0";
	opts.insns_sz = 1696;
	opts.insns = (void *)"\
\xbf\x16\0\0\0\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\x78\xff\xff\xff\xb7\x02\0\
\0\x88\0\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\x71\0\0\0\x05\0\x0e\0\0\0\0\0\x61\
\xa1\x78\xff\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x7c\xff\
\0\0\0\0\xd5\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x80\xff\0\0\0\0\xd5\
\x01\x01\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa1\x84\xff\0\0\0\0\xd5\x01\x01\0\0\
\0\0\0\x85\0\0\0\xa8\0\0\0\xbf\x70\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x61\x60\x08\0\
\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xf0\x0d\0\0\x63\x01\0\0\0\0\0\0\x61\x60\
\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xec\x0d\0\0\x63\x01\0\0\0\0\0\0\x79\
\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xe0\x0d\0\0\x7b\x01\0\0\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\0\x05\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xd8\x0d\0\0\
\x7b\x01\0\0\0\0\0\0\xb7\x01\0\0\x12\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\xd8\x0d\
\0\0\xb7\x03\0\0\x1c\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xda\
\xff\0\0\0\0\x63\x7a\x78\xff\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\xf8\x0d\0\0\
\x18\x61\0\0\0\0\0\0\0\0\0\0\xe8\x0e\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\
\0\0\0\0\0\0\x0e\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xe0\x0e\0\0\x7b\x01\0\0\0\0\0\
\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x60\x0e\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x28\x0f\
\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x68\x0e\0\0\x18\x61\0\0\0\
\0\0\0\0\0\0\0\x38\x0f\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x50\x0f\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\
\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xf0\x0e\0\0\x63\x01\0\0\0\0\0\0\x61\x60\
\x0c\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xf4\x0e\0\0\x63\x01\0\0\0\0\0\0\x79\
\x60\x10\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xf8\x0e\0\0\x7b\x01\0\0\0\0\0\0\
\x61\xa0\x78\xff\0\0\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x20\x0f\0\0\x63\x01\0\0\0\
\0\0\0\x18\x68\0\0\0\0\0\0\0\0\0\0\x40\x0e\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x58\
\x0f\0\0\xb7\x02\0\0\x15\0\0\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\
\0\0\xa7\0\0\0\xbf\x07\0\0\0\0\0\0\xc5\x07\xa6\xff\0\0\0\0\x62\x08\x04\0\0\0\0\
\0\xc5\x07\x01\0\0\0\0\0\x63\x78\x04\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\xc5\x07\x03\0\0\0\0\0\xbf\x79\0\0\0\0\0\0\x77\x09\0\0\x20\0\0\0\x63\
\x90\0\0\0\0\0\0\x6a\x08\x02\0\0\0\0\0\xc5\x07\x02\0\0\0\0\0\x15\x09\x01\0\0\0\
\0\0\x6a\x08\x02\0\x40\0\0\0\xb7\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\
\xd8\x0e\0\0\xb7\x03\0\0\x80\0\0\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\
\x60\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\
\xbf\x19\0\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\xc5\x07\x8c\xff\0\0\0\0\x63\x7a\x80\
\xff\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x70\x0f\0\0\x18\x61\0\0\0\0\0\0\0\0\0\
\0\xb0\x10\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\x78\x0f\0\0\x18\
\x61\0\0\0\0\0\0\0\0\0\0\xa8\x10\0\0\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\
\0\0\0\x08\x10\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\xf0\x10\0\0\x7b\x01\0\0\0\0\0\0\
\x18\x60\0\0\0\0\0\0\0\0\0\0\x10\x10\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\0\x11\0\0\
\x7b\x01\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x61\0\0\0\0\0\0\0\
\0\0\0\x18\x11\0\0\x7b\x01\0\0\0\0\0\0\x61\x60\x08\0\0\0\0\0\x18\x61\0\0\0\0\0\
\0\0\0\0\0\xb8\x10\0\0\x63\x01\0\0\0\0\0\0\x61\x60\x0c\0\0\0\0\0\x18\x61\0\0\0\
\0\0\0\0\0\0\0\xbc\x10\0\0\x63\x01\0\0\0\0\0\0\x79\x60\x10\0\0\0\0\0\x18\x61\0\
\0\0\0\0\0\0\0\0\0\xc0\x10\0\0\x7b\x01\0\0\0\0\0\0\x61\xa0\x78\xff\0\0\0\0\x18\
\x61\0\0\0\0\0\0\0\0\0\0\xe8\x10\0\0\x63\x01\0\0\0\0\0\0\x18\x68\0\0\0\0\0\0\0\
\0\0\0\xd8\x0f\0\0\x18\x61\0\0\0\0\0\0\0\0\0\0\x20\x11\0\0\xb7\x02\0\0\x15\0\0\
\0\xb7\x03\0\0\x0c\0\0\0\xb7\x04\0\0\0\0\0\0\x85\0\0\0\xa7\0\0\0\xbf\x07\0\0\0\
\0\0\0\xc5\x07\x58\xff\0\0\0\0\x62\x08\x04\0\0\0\0\0\xc5\x07\x01\0\0\0\0\0\x63\
\x78\x04\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\xc5\x07\x03\0\0\0\0\0\
\xbf\x79\0\0\0\0\0\0\x77\x09\0\0\x20\0\0\0\x63\x90\0\0\0\0\0\0\x6a\x08\x02\0\0\
\0\0\0\xc5\x07\x02\0\0\0\0\0\x15\x09\x01\0\0\0\0\0\x6a\x08\x02\0\x40\0\0\0\xb7\
\x01\0\0\x05\0\0\0\x18\x62\0\0\0\0\0\0\0\0\0\0\xa0\x10\0\0\xb7\x03\0\0\x80\0\0\
\0\x85\0\0\0\xa6\0\0\0\xbf\x07\0\0\0\0\0\0\x18\x60\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\x61\x01\0\0\0\0\0\0\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\xa8\
\0\0\0\xc5\x07\x3e\xff\0\0\0\0\x63\x7a\x84\xff\0\0\0\0\x61\xa1\x78\xff\0\0\0\0\
\xd5\x01\x02\0\0\0\0\0\xbf\x19\0\0\0\0\0\0\x85\0\0\0\xa8\0\0\0\x61\xa0\x80\xff\
\0\0\0\0\x63\x06\x18\0\0\0\0\0\x61\xa0\x84\xff\0\0\0\0\x63\x06\x1c\0\0\0\0\0\
\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0";
	err = bpf_load_and_run(&opts);
	if (err < 0)
		return err;
	return 0;
}

static inline struct kfunc_call_test_lskel *
kfunc_call_test_lskel__open_and_load(void)
{
	struct kfunc_call_test_lskel *skel;

	skel = kfunc_call_test_lskel__open();
	if (!skel)
		return NULL;
	if (kfunc_call_test_lskel__load(skel)) {
		kfunc_call_test_lskel__destroy(skel);
		return NULL;
	}
	return skel;
}

#endif /* __KFUNC_CALL_TEST_LSKEL_SKEL_H__ */
